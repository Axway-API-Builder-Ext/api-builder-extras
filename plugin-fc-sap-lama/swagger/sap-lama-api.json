{
    "swagger": "2.0",
    "info": {
        "title": "SAP Landscape Mgt.",
        "version": "3.0.11.0",
        "description": "SAP Landscape Management 3.0 API to used in the Axway API-Builder Connector.",
        "contact": {
            "name": "Chris Wiechmann",
            "url": "https://github.com/Axway-API-Builder-Ext/SAP-LaMa-Connector",
            "email": "cwiechmann@axway.com"
        },
        "license": {
            "name": "Apache 2.0"
        }
    },
    "host": "sap.lama-host.com:50000",
    "paths": {
        "/xsrftoken": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "description": "Returns a Cross-Site-Request-Forgery token. In the request header, include the custom HTTP header 'x-csrf-token' with value 'Fetch'. Retrieve the token from the custom HTTP response header 'x-csrf-token'. This header might be used in all requests of type GET to fetch the XSRF token. It is only valid within the user session. Make sure to include the session cookie into follow-up requests. [This method was deprecated with 3.0.9.0. It is not required anymore to retrieve a Cross-Site-Request-Forgery and pass it as a value of this custom header.]",
                "summary": "Returns an XSRF token. [deprecated] ( xsrftoken)",
                "deprecated": true,
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "description": "Set value 'Fetch' to fetch an XSRF token",
                        "required": true
                    }
                ],
                "operationId": "Get-XSRF-Token"
            }
        },
        "/activities/{activityId}/cancel": {
            "post": {
                "responses": {
                    "200": {
                        "$ref": "#/responses/Activity"
                    },
                    "400": {
                        "description": "Activity cannot be cancelled in the current status."
                    },
                    "403": {
                        "description": "No permission to cancel activity."
                    },
                    "404": {
                        "description": "No activity found for ID."
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Cancels an activity",
                "description": "Cancels an activity based on the activity ID or activity number provided. To trigger a cancel hard, use parameter 'hard'. A cancel hard will immediately put the activity on status 'cancelled' and release all locks without waiting for executing activity steps to get cancelled or completed. Valid source states: Initial, Executing, On Hold, Waiting. Output state: Cancelled",
                "parameters": [
                    {
                        "in": "query",
                        "name": "hard",
                        "type": "boolean",
                        "description": "Trigger cancel hard (optional)",
                        "default": true
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "Cancel-Activity"
            },
            "parameters": [
                {
                    "$ref": "#/parameters/activityId"
                }
            ]
        },
        "/activities/{activityId}/steps/{stepId}/continue": {
            "post": {
                "responses": {
                    "200": {
                        "$ref": "#/responses/Activity"
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Continues an activity",
                "description": "Continues a waiting activity step based on the activity ID or activity number and activity step ID or activity step number provided. In the JSON body, include an ActivityStepInteractionResponse object with action (mandatory) and input (optional). Valid source state: Waiting. Output state: Executing",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "string"
                                },
                                "input": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "ActivityStepInteractionResponse object with action and optional input (required).",
                        "x-examples": {
                            "application/json": {
                                "response": "OK",
                                "input": "myInput"
                            }
                        }
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "Continue-Activity"
            },
            "parameters": [
                {
                    "$ref": "#/parameters/activityId"
                },
                {
                    "$ref": "#/parameters/stepId"
                }
            ]
        },
        "/activities": {
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "204": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Creates a new activity",
                "description": "Creates a new activity. In the request body, include an ActivityRequest object with all required parameters. Depending on the operation to execute, the correct request object has to be passed. Valid request objects: ProvisioningRequest, BlueprintRequest, CustomProcessRequest, OperationTemplateRequest, CustomOperationRequest, InstanceOperationRequest, RfcCreateSystemMessageRequest, RfcModifyLogonGroupsRequest, RfcOperationRequest, RfcTaskManagerRequest, SystemOperationRequest.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "operation": {
                                    "type": "string"
                                },
                                "instances": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "instanceId": {
                                                "type": "string"
                                            },
                                            "host": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "parameters": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "key": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": [
                                                    "boolean",
                                                    "integer"
                                                ]
                                            }
                                        }
                                    }
                                },
                                "validateOnly": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "ActivityRequest object with all required parameters. Depending on the operation to execute, the correct request object has to be passed. Valid request objects: ProvisioningRequest, BlueprintRequest, CustomProcessRequest, OperationTemplateRequest, CustomOperationRequest, InstanceOperationRequest, RfcCreateSystemMessageRequest, RfcModifyLogonGroupsRequest, RfcOperationRequest, RfcTaskManagerRequest, SystemOperationRequest.",
                        "x-examples": {
                            "application/json": {
                                "type": "instanceOperation",
                                "operation": "stop+unprepare",
                                "instances": [
                                    {
                                        "instanceId": "SystemID.X10.Number.10.InstanceHost.simas0x10",
                                        "host": "simats07"
                                    }
                                ],
                                "parameters": [
                                    {
                                        "key": "hostCheck",
                                        "value": false
                                    },
                                    {
                                        "key": "userExit",
                                        "value": false
                                    },
                                    {
                                        "key": "instanceHardShutdown",
                                        "value": false
                                    },
                                    {
                                        "key": "instanceSoftTimeout",
                                        "value": 10
                                    }
                                ],
                                "validateOnly": false
                            },
                            "SecondExample": {
                                "type": "systemOperation",
                                "operation": "rollingKernelSwitch",
                                "systemIds": [
                                    "SystemID.X10.SystemHost.simdbx10"
                                ],
                                "validateOnly": false,
                                "parameters": [
                                    {
                                        "key": "RKSConfiguration",
                                        "value": "RKS742LINUX",
                                        "isSecure": false
                                    },
                                    {
                                        "key": "RKSRestartOnly",
                                        "value": false,
                                        "isSecure": false
                                    },
                                    {
                                        "key": "RKSExecuteUpgrade",
                                        "value": true,
                                        "isSecure": false
                                    },
                                    {
                                        "key": "RKSSoftTimeout",
                                        "value": 600,
                                        "isSecure": false
                                    },
                                    {
                                        "key": "RKSWaitTimeout",
                                        "value": 360,
                                        "isSecure": false
                                    }
                                ]
                            },
                            "ThirdExample": {
                                "type": "operationTemplate",
                                "operation": "myOperationTemplate"
                            },
                            "FourthExample": {
                                "type": "rfcTaskManagerOperation",
                                "operation": "GetTaskLists",
                                "client": "001",
                                "entityId": "SystemID.X10.Number.10.InstanceHost.simas0x10"
                            },
                            "FithExample": {
                                "type": "rfcCreateSystemMessage",
                                "entityIds": [
                                    "SystemID.X10.Number.10.InstanceHost.simas0x10"
                                ],
                                "message": "This is a test message.",
                                "messageTwo": "This is the second line of the message",
                                "expirationTime": "2018-04-18T11:37:00Z",
                                "deletionTime": "2018-05-18T11:40:00Z",
                                "language": "EN",
                                "client": "001"
                            },
                            "SixExample": {
                                "type": "rfcModifyLogonGroups",
                                "operation": "AddToLogonGroup",
                                "entityId": "SystemID.X10.Number.10.InstanceHost.simas0x10",
                                "logonGroups": [
                                    "PUBLIC",
                                    "PRIVATE"
                                ]
                            }
                        }
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "operationId": "Create-Activity"
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns a list of activities",
                "description": "Returns a list of activities. For pagination, use parameters 'offset' and 'limit'. For filtering, use parameters 'id', 'status', 'user' and 'days'. To embed activity steps, logs and results use parameter 'embed'.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/embed"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/status"
                    }
                ],
                "operationId": "Get-list-of-activities"
            }
        },
        "/activities/{activityId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Returns an activity",
                "description": "Returns an activity based on the activity ID or activity number provided. To embed activity steps, logs and results use parameter 'embed'.",
                "produces": [
                    "application/json"
                ],
                "operationId": "Get-Activity"
            },
            "parameters": [
                {
                    "$ref": "#/parameters/activityId"
                }
            ],
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Deletes an activity",
                "description": "Deletes an activity based on the activity ID or activity number provided. Valid source states: Completed, Cancelled, Failed, Partially Failed, On Hold.",
                "produces": [
                    "application/json"
                ],
                "operationId": "Delete-Activity",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "/activities/{activityId}/steps/{stepId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Returns an activity step",
                "description": "Returns an activity step based on the activity ID or activity number and activity step ID or activity step number provided. To embed activity logs, use parameter 'embed'.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/embed"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ],
                "operationId": "Get-Activity-Step"
            },
            "parameters": [
                {
                    "$ref": "#/parameters/activityId"
                },
                {
                    "$ref": "#/parameters/stepId"
                }
            ]
        },
        "/activities/{activityId}/steps/{stepId}/logs": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Returns a list of logs for an activity step",
                "description": "Returns a list of logs based on the activity ID or activity number and activity step ID or activity step number provided. For pagination, use parameters 'offset' and 'limit'. For filtering, use parameter 'severity'.",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/severity"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ],
                "operationId": "Get-Activity-Logs"
            },
            "parameters": [
                {
                    "$ref": "#/parameters/activityId"
                },
                {
                    "$ref": "#/parameters/stepId"
                }
            ]
        },
        "/activities/{activityId}/steps": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Returns a list of activity steps for an activity",
                "description": "Returns a list of activitiy steps for the activity ID or activity number provided. For pagination, use parameters 'offset' and 'limit'. For filtering, use parameter 'status'. To embed activity logs, use parameter 'embed'.",
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/status"
                    },
                    {
                        "$ref": "#/parameters/embed"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ],
                "operationId": "Get-Activity-Steps"
            },
            "parameters": [
                {
                    "$ref": "#/parameters/activityId"
                }
            ]
        },
        "/activities/{activityId}/hold": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Puts an activity on hold",
                "description": "Puts an activity on hold based on the activity ID or activity number provided. Valid source states: Initial, Executing. Output state: On Hold",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "activityId": {
                                    "type": "string"
                                },
                                "activityNumber": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "beginTime": {
                                    "type": "string"
                                },
                                "endTime": {
                                    "type": "string"
                                },
                                "duration": {
                                    "type": "integer"
                                },
                                "links": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            },
                                            "method": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Custom request header to protect agains Cross-Site-Request-Forgery. Only the existence of the header, not the value, is verified.",
                        "x-examples": {
                            "application/json": {
                                "activityId": "process-c7c81fbf-203e-11e7-9917-000000665ce2",
                                "activityNumber": "42",
                                "status": "executing",
                                "user": "Administrator",
                                "description": "Start",
                                "beginTime": "2018-04-26T08:53:36.103Z",
                                "endTime": "2018-04-26T08:53:36.243Z",
                                "duration": 140,
                                "links": [
                                    {
                                        "href": "https://localhost:50001/lama-api/activities/42",
                                        "rel": "self",
                                        "method": "GET"
                                    },
                                    {
                                        "href": "https://localhost:50001/lama-api/activities/42/steps",
                                        "rel": "steps",
                                        "method": "GET"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "operationId": "Hold-activity"
            },
            "parameters": [
                {
                    "$ref": "#/parameters/activityId"
                }
            ]
        },
        "/activities/{activityId}/release": {
            "post": {
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "activityId": {
                                    "type": "string"
                                },
                                "activityNumber": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "user": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "beginTime": {
                                    "type": "string"
                                },
                                "endTime": {
                                    "type": "string"
                                },
                                "duration": {
                                    "type": "integer"
                                },
                                "links": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "href": {
                                                "type": "string"
                                            },
                                            "rel": {
                                                "type": "string"
                                            },
                                            "method": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Custom request header to protect agains Cross-Site-Request-Forgery. Only the existence of the header, not the value, is verified.",
                        "x-examples": {
                            "application/json": {
                                "activityId": "process-c7c81fbf-203e-11e7-9917-000000665ce2",
                                "activityNumber": "42",
                                "status": "executing",
                                "user": "Administrator",
                                "description": "Start",
                                "beginTime": "2018-04-26T08:53:36.103Z",
                                "endTime": "2018-04-26T08:53:36.243Z",
                                "duration": 140,
                                "links": [
                                    {
                                        "href": "https://localhost:50001/lama-api/activities/42",
                                        "rel": "self",
                                        "method": "GET"
                                    },
                                    {
                                        "href": "https://localhost:50001/lama-api/activities/42/steps",
                                        "rel": "steps",
                                        "method": "GET"
                                    }
                                ]
                            }
                        }
                    }
                ],
                "summary": "Releases an activity",
                "description": "Releases an activity based on the activity ID or activity number provided. Valid source state: On Hold. Output states: Initial, Executing",
                "operationId": "Release-Activity"
            },
            "parameters": [
                {
                    "name": "activityId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/activities/{activityId}/retry": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Retries an activity",
                "description": "Retries a failed activity based on the activity ID or activity number provided and returns the newly created activity. To provide a change ID, use parameter 'changeId'. Valid source states: Failed, Partially Failed. Output state: Initial",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "changeId",
                        "type": "string",
                        "description": "If required, the change ID for the change to be performed.",
                        "default": "0815"
                    }
                ],
                "operationId": "Retry-Activity"
            },
            "parameters": [
                {
                    "name": "activityId",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/appliances": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Returns a list of appliances",
                "description": "Returns a list of appliances. For pagination, use parameters 'offset' and 'limit'. For filtering, use parameters 'repositoryName' and 'productName'.",
                "operationId": "Get-All-Appliances",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "in": "query",
                        "name": "repositoryName",
                        "type": "string",
                        "description": "Filter by repository name.",
                        "default": "ApplianceRepository"
                    },
                    {
                        "in": "query",
                        "name": "productName",
                        "type": "string",
                        "default": "SAP ERP",
                        "description": "Filter by product name"
                    },
                    {
                        "in": "query",
                        "name": "productKey",
                        "type": "string",
                        "description": "Filter by product key.",
                        "default": "12345678909876543210"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            }
        },
        "/appliances/{applianceName}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Returns an appliance",
                "description": "Returns an appliance based on the appliance name provided.",
                "operationId": "Get-appliance",
                "parameters": [
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "applianceName",
                    "in": "path",
                    "type": "string",
                    "required": true,
                    "description": "Appliance Name. Make sure to URL encode the name. example: \"SAP NetWeaver 7.4 SR2 ABAP on Sybase -> SAP%20NetWeaver%207.4%20SR2%20ABAP%20on%20Sybase\""
                }
            ]
        },
        "/discovery": {
            "post": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Triggers a new discovery",
                "description": "Triggers a new discovery. In the request body, include an: DiscoveryRequest object with all required parameters. The result of the discovery request contains different lists. There is a list for each new entity type discovered and also a list for entities already managed by LaMa. In case the flag 'autoAssignInstances' is set to 'true' in the discovery request, the newly discovered instances will be automatically assigned to the system and also moved from the instance list to the system list. The newly discovered entites can be added via a separate POST call to the respective entity endpoint. In case the flag 'autoAssignInstances' is 'true', the system is already managed by LaMa and a new instance is discovered for that system, the separate call to create the new instance can be a PATCH against the systems endpoint for the specific system (systems/{id}/instances) or a PATCH against the systems collection (/systems with operation \"CREATE_OR_PARTIAL_UPDATE\"). In case you just want to discover new instances for a managed system, we recommend to set the 'autoAssignInstances' flag to 'false' and then POST the newly discovered instances to the instances endpoint (/instances). If an entity contains sensitive data like passwords, those properties will be returned as a masked string and have to be set manually when adding the entity to LaMa.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "hostnames": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "hostAgentSettings": {
                                    "type": "object",
                                    "properties": {
                                        "authenticationType": {
                                            "type": "string"
                                        },
                                        "userName": {
                                            "type": "string"
                                        },
                                        "password": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "instanceAgentSettings": {
                                    "type": "object",
                                    "properties": {
                                        "authenticationType": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "autoAssignInstances": {
                                    "type": "boolean"
                                },
                                "pool": {
                                    "type": "string"
                                }
                            }
                        },
                        "x-examples": {
                            "application/json": {
                                "hostnames": [
                                    "hostname.domain",
                                    "otherHost.domain"
                                ],
                                "hostAgentSettings": {
                                    "authenticationType": "Basic",
                                    "userName": "sapadm",
                                    "password": "password"
                                },
                                "instanceAgentSettings": {
                                    "authenticationType": "None"
                                },
                                "autoAssignInstances": true,
                                "pool": "Development"
                            }
                        },
                        "description": "DiscoveryRequest object with all required parameters. The result of the discovery request contains different lists. There is a list for each new entity type discovered and also a list for entities already managed by LaMa. In case the flag 'autoAssignInstances' is set to 'true' in the discovery request, the newly discovered instances will be automatically assigned to the system and also moved from the instance list to the system list. The newly discovered entites can be added via a separate POST call to the respective entity endpoint. In case the flag 'autoAssignInstances' is 'true', the system is already managed by LaMa and a new instance is discovered for that system, the separate call to create the new instance can be a PATCH against the systems endpoint for the specific system (systems/{id}/instances) or a PATCH against the systems collection (/systems with operation \"CREATE_OR_PARTIAL_UPDATE\"). In case you just want to discover new instances for a managed system, we recommend to set the 'autoAssignInstances' flag to 'false' and then POST the newly discovered instances to the instances endpoint (/instances). If an entity contains sensitive data like passwords, those properties will be returned as a masked string and have to be set manually when adding the entity to LaMa."
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    }
                ],
                "operationId": "Trigger-Discovery"
            }
        },
        "/hosts": {
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "409": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Creates a new host",
                "description": "Creates a new host. In the request body, include an: Host with all required parameters.",
                "operationId": "Create-Host",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "hostname": {
                                    "type": "string"
                                },
                                "pool": {
                                    "type": "string"
                                },
                                "isManaged": {
                                    "type": "boolean"
                                },
                                "isOperational": {
                                    "type": "boolean"
                                },
                                "isIsolationReady": {
                                    "type": "boolean"
                                },
                                "isAcEnabled": {
                                    "type": "boolean"
                                },
                                "hostAgentConfiguration": {
                                    "type": "object",
                                    "properties": {
                                        "useSecureCommunication": {
                                            "type": "boolean"
                                        },
                                        "port": {
                                            "type": "string"
                                        },
                                        "authenticationType": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "hostType": {
                                    "type": "object",
                                    "properties": {
                                        "operatingSystem": {
                                            "type": "string"
                                        },
                                        "operatingSystemVersion": {
                                            "type": "string"
                                        },
                                        "cpuType": {
                                            "type": "string"
                                        },
                                        "addressSpace": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Host with all required parameters.",
                        "x-examples": {
                            "application/json": {
                                "hostname": "hostname.domain",
                                "pool": "Development",
                                "isManaged": true,
                                "isOperational": true,
                                "isIsolationReady": false,
                                "isAcEnabled": false,
                                "hostAgentConfiguration": {
                                    "useSecureCommunication": false,
                                    "port": "1128",
                                    "authenticationType": "Default"
                                },
                                "hostType": {
                                    "operatingSystem": "Linux",
                                    "operatingSystemVersion": "SLES 11",
                                    "cpuType": "X86_64",
                                    "addressSpace": 64
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all registered hosts",
                "description": "Returns all registered hosts. For pagination, use parameters 'offset' and 'limit'. For filtering, use parameter 'pool'. To embed relations, use parameter 'embed'.",
                "operationId": "Get-Hosts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "in": "query",
                        "name": "hostname",
                        "type": "string",
                        "description": "Filter by hostname. Multiple values can be passed.",
                        "default": "hostname.domain"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "in": "query",
                        "name": "pool",
                        "type": "string",
                        "description": "Filter by pool name or pool container name. Multiple values can be passed.",
                        "default": "production"
                    },
                    {
                        "$ref": "#/parameters/embed"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Updates multiple host",
                "description": "Updates multiple hosts or creates new ones if they do not exist.",
                "operationId": "Modify-Multiple-Hosts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "operation": {
                                    "type": "string"
                                },
                                "hosts": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "hostname": {
                                                "type": "string"
                                            },
                                            "pool": {
                                                "type": "string"
                                            },
                                            "isOperational": {
                                                "type": "boolean"
                                            },
                                            "isIsolationReady": {
                                                "type": "boolean"
                                            },
                                            "isAcEnabled": {
                                                "type": "boolean"
                                            },
                                            "hostUtilization": {
                                                "type": "object",
                                                "properties": {
                                                    "sapsProvided": {
                                                        "type": "integer"
                                                    },
                                                    "memoryProvided": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "An mass patch request object which contains the operation to be performed and a list of entities with all parameters or just those that need to be updated.",
                        "x-examples": {
                            "application/json": {
                                "operation": "PARTIAL_UPDATE",
                                "hosts": [
                                    {
                                        "hostname": "hostname.domain",
                                        "pool": "Development",
                                        "isOperational": true,
                                        "isIsolationReady": true,
                                        "isAcEnabled": true,
                                        "hostUtilization": {
                                            "sapsProvided": 2000,
                                            "memoryProvided": 8300
                                        }
                                    },
                                    {
                                        "hostname": "hostname2.domain",
                                        "pool": "Production",
                                        "isOperational": true,
                                        "isIsolationReady": true,
                                        "isAcEnabled": true,
                                        "hostUtilization": {
                                            "sapsProvided": 10000,
                                            "memoryProvided": 8192
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    }
                ]
            }
        },
        "/hosts/{hostname}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns a host",
                "description": "Returns a host based on the host name provided. To embed relations and validations, use parameter 'embed'.",
                "operationId": "Get-Host-With-Name",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/embed"
                    }
                ]
            },
            "parameters": [
                {
                    "$ref": "#/parameters/hostname"
                }
            ],
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Deletes a host",
                "description": "Deletes a host based on the hostname provided.",
                "operationId": "Delete-Host",
                "parameters": [
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Updates a host",
                "description": "Updates a host based on the hostname provided by replacing it with the new values provided.",
                "operationId": "Update-Host",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pool": {
                                    "type": "string"
                                },
                                "isManaged": {
                                    "type": "boolean"
                                },
                                "isOperational": {
                                    "type": "boolean"
                                },
                                "isIsolationReady": {
                                    "type": "boolean"
                                },
                                "isAcEnabled": {
                                    "type": "boolean"
                                },
                                "sapacextConfiguration": {
                                    "type": "object",
                                    "properties": {
                                        "isDowngradeAllowed": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "hostAgentConfiguration": {
                                    "type": "object",
                                    "properties": {
                                        "useSecureCommunication": {
                                            "type": "boolean"
                                        },
                                        "port": {
                                            "type": "string"
                                        },
                                        "authenticationType": {
                                            "type": "string"
                                        },
                                        "userName": {
                                            "type": "string"
                                        },
                                        "password": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "networkConfiguration": {
                                    "type": "object",
                                    "properties": {
                                        "isUsingDHCP": {
                                            "type": "boolean"
                                        },
                                        "isPerformingNAT": {
                                            "type": "boolean"
                                        },
                                        "networkAssignments": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "networkInterface": {
                                                        "type": "string"
                                                    },
                                                    "network": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "hostUtilization": {
                                    "type": "object",
                                    "properties": {
                                        "sapsProvided": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Host with all required parameters. ",
                        "x-examples": {
                            "application/json": {
                                "pool": "Development",
                                "isManaged": true,
                                "isOperational": true,
                                "isIsolationReady": true,
                                "isAcEnabled": true,
                                "sapacextConfiguration": {
                                    "isDowngradeAllowed": false
                                },
                                "hostAgentConfiguration": {
                                    "useSecureCommunication": false,
                                    "port": "1128",
                                    "authenticationType": "Basic",
                                    "userName": "sapadm",
                                    "password": "secret"
                                },
                                "networkConfiguration": {
                                    "isUsingDHCP": false,
                                    "isPerformingNAT": false,
                                    "networkAssignments": [
                                        {
                                            "networkInterface": "eth0",
                                            "network": "CorporateNetwork"
                                        }
                                    ]
                                },
                                "hostUtilization": {
                                    "sapsProvided": 1000
                                }
                            }
                        }
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    }
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Modifies a host",
                "description": "Modifies a host based on the hostname provided by modifying the values provided.",
                "operationId": "Modify-Host",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pool": {
                                    "type": "string"
                                }
                            }
                        },
                        "x-examples": {
                            "application/json": {
                                "pool": "Development"
                            }
                        },
                        "description": "Host with all parameters which should be modified."
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    }
                ]
            }
        },
        "/hosts/{hostname}/relations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all relations for a host",
                "description": "Returns all relations of a host based on the hostname provided. For pagination, use parameters 'offset' and 'limit'.",
                "operationId": "Get-Host-Relations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "in": "query",
                        "name": "typeId",
                        "type": "string",
                        "description": "Filter by relation typeId",
                        "default": "PoolHosts"
                    },
                    {
                        "in": "query",
                        "name": "predefined",
                        "type": "boolean",
                        "default": true,
                        "description": "Filter by relations isPredefined flag"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "parameters": [
                {
                    "$ref": "#/parameters/hostname"
                }
            ]
        },
        "/hosts/{hostname}/validations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all validations for a host",
                "description": "Returns all validations of a host based on the hostname provided. For pagination, use parameters 'offset' and 'limit'.",
                "operationId": "Get-Host-Validations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "type": "string",
                        "description": "Filter by validation name example: \"MntOptIgnored\" ",
                        "default": "MntOptIgnored"
                    },
                    {
                        "$ref": "#/parameters/severity"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "parameters": [
                {
                    "$ref": "#/parameters/hostname"
                }
            ]
        },
        "/instances": {
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "409": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Creates a new instance",
                "description": "Creates a new instance based on the instance ID provided.",
                "operationId": "Create-Instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "sid": {
                                    "type": "string"
                                },
                                "systemId": {
                                    "type": "string"
                                },
                                "instanceType": {
                                    "type": "string"
                                },
                                "instanceSubType": {
                                    "type": "string"
                                },
                                "isManaged": {
                                    "type": "boolean"
                                },
                                "isOperational": {
                                    "type": "boolean"
                                },
                                "installationHostname": {
                                    "type": "string"
                                },
                                "instanceNumber": {
                                    "type": "string"
                                },
                                "isAcEnabled": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "x-examples": {
                            "application/json": {
                                "sid": "X10",
                                "systemId": "SystemID.X10.SystemHost.simdbx10",
                                "instanceType": "Application Server",
                                "instanceSubType": "ABAP",
                                "isManaged": true,
                                "isOperational": true,
                                "installationHostname": "x10as59.example.com",
                                "instanceNumber": "59",
                                "isAcEnabled": false
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all registered instances",
                "description": "Returns all registered instances. For pagination, use parameters 'offset' and 'limit'. For filtering, use parameters 'pool' and 'sid'.",
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "in": "query",
                        "name": "invalidsOnly",
                        "type": "boolean",
                        "description": "Flag indicating whether only invalid entities should be shown. example: true",
                        "default": true
                    },
                    {
                        "in": "query",
                        "name": "pool",
                        "type": "string",
                        "description": "Filter by pool name or pool container name. Multiple values can be passed. example: \"Production\""
                    },
                    {
                        "in": "query",
                        "name": "sid",
                        "type": "string",
                        "description": "Filter by SID. Multiple values can be passed. example: \"XYZ\""
                    },
                    {
                        "$ref": "#/parameters/embed"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ],
                "operationId": "Get-Instances"
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Updates multiple instances",
                "description": "Updates multiple instances or creates new ones if they do not exist.",
                "operationId": "Modify-Multiple-Instances",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "operation": {
                                    "type": "string"
                                },
                                "instances": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "sid": {
                                                "type": "string"
                                            },
                                            "pool": {
                                                "type": "string"
                                            },
                                            "systemId": {
                                                "type": "string"
                                            },
                                            "instanceType": {
                                                "type": "string"
                                            },
                                            "instanceSubType": {
                                                "type": "string"
                                            },
                                            "isManaged": {
                                                "type": "boolean"
                                            },
                                            "isOperational": {
                                                "type": "boolean"
                                            },
                                            "installationHostname": {
                                                "type": "string"
                                            },
                                            "communicationHostname": {
                                                "type": "string"
                                            },
                                            "instanceNumber": {
                                                "type": "string"
                                            },
                                            "instanceAgentConfiguration": {
                                                "type": "object",
                                                "properties": {
                                                    "useSecureCommunication": {
                                                        "type": "boolean"
                                                    },
                                                    "port": {
                                                        "type": "string"
                                                    },
                                                    "monitorDetails": {
                                                        "type": "boolean"
                                                    },
                                                    "profileParameters": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "isAcEnabled": {
                                                "type": "boolean"
                                            },
                                            "consumedResourceConfiguration": {
                                                "type": "object",
                                                "properties": {
                                                    "consumesAllResources": {
                                                        "type": "boolean"
                                                    },
                                                    "exclusivelyConsumedResources": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    }
                                                }
                                            },
                                            "instanceRequirements": {
                                                "type": "object",
                                                "properties": {
                                                    "requiredSAPS": {
                                                        "type": "integer"
                                                    },
                                                    "requiredMemory": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "assignedHost": {
                                                "type": "object",
                                                "properties": {
                                                    "entityType": {
                                                        "type": "string"
                                                    },
                                                    "entityId": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "An mass patch request object which contains the operation to be performed and a list of entities with all parameters or just those that need to be updated.",
                        "x-examples": {
                            "application/json": {
                                "operation": "CREATE_OR_UPDATE",
                                "instances": [
                                    {
                                        "sid": "T01",
                                        "pool": "Development",
                                        "systemId": "SystemID.T01.SystemHost.sapt01.example.com",
                                        "instanceType": "Application Server",
                                        "instanceSubType": "ABAP",
                                        "isManaged": true,
                                        "isOperational": false,
                                        "installationHostname": "sapt01.example.com",
                                        "communicationHostname": "sapt01.example.com",
                                        "instanceNumber": "11",
                                        "instanceAgentConfiguration": {
                                            "useSecureCommunication": true,
                                            "port": "50000",
                                            "monitorDetails": false,
                                            "profileParameters": {}
                                        },
                                        "isAcEnabled": false,
                                        "consumedResourceConfiguration": {
                                            "consumesAllResources": false,
                                            "exclusivelyConsumedResources": []
                                        },
                                        "instanceRequirements": {
                                            "requiredSAPS": 0,
                                            "requiredMemory": 0
                                        },
                                        "assignedHost": {
                                            "entityType": "HOST",
                                            "entityId": "sapt01.example.com"
                                        }
                                    },
                                    {
                                        "sid": "T02",
                                        "pool": "Development",
                                        "systemId": "SystemID.T02.SystemHost.sapt02.example.com",
                                        "instanceType": "Application Server",
                                        "instanceSubType": "ABAP",
                                        "isManaged": true,
                                        "isOperational": false,
                                        "installationHostname": "sapt02.example.com",
                                        "communicationHostname": "sapt02.example.com",
                                        "instanceNumber": "10",
                                        "instanceAgentConfiguration": {
                                            "useSecureCommunication": true,
                                            "port": "50000",
                                            "monitorDetails": false,
                                            "profileParameters": {}
                                        },
                                        "isAcEnabled": false,
                                        "consumedResourceConfiguration": {
                                            "consumesAllResources": false,
                                            "exclusivelyConsumedResources": []
                                        },
                                        "instanceRequirements": {
                                            "requiredSAPS": 0,
                                            "requiredMemory": 0
                                        },
                                        "assignedHost": {
                                            "entityType": "HOST",
                                            "entityId": "sapt02.example.com"
                                        }
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    }
                ]
            }
        },
        "/instances/{instanceId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/embed"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ],
                "operationId": "Get-Instance",
                "summary": "Returns an instance",
                "description": "Returns an instance based on the instance ID provided."
            },
            "parameters": [
                {
                    "$ref": "#/parameters/instanceId"
                }
            ],
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Deletes an instance",
                "description": "Deletes an instance based on the instance ID provided.",
                "operationId": "Delete-Instance",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Updates an instance",
                "description": "Updates an instance based on the instance ID provided by replacing it with the new values provided.",
                "operationId": "Update-Instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "customName": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "isManaged": {
                                    "type": "boolean"
                                },
                                "isOperational": {
                                    "type": "boolean"
                                },
                                "targetStatus": {
                                    "type": "string"
                                },
                                "instanceAgentConfiguration": {
                                    "type": "object",
                                    "properties": {
                                        "useSecureCommunication": {
                                            "type": "boolean"
                                        },
                                        "port": {
                                            "type": "string"
                                        },
                                        "authenticationType": {
                                            "type": "string"
                                        },
                                        "userName": {
                                            "type": "string"
                                        },
                                        "password": {
                                            "type": "string"
                                        },
                                        "monitorDetails": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "isAcEnabled": {
                                    "type": "boolean"
                                },
                                "virtualHostNames": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "virtualHostName": {
                                                "type": "string"
                                            },
                                            "isPrimary": {
                                                "type": "boolean"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "network": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "consumedResourceConfiguration": {
                                    "type": "object",
                                    "properties": {
                                        "consumesAllResources": {
                                            "type": "boolean"
                                        },
                                        "exclusivelyConsumedResources": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "consumedResource": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "instanceRequirements": {
                                    "type": "object",
                                    "properties": {
                                        "requiredSAPS": {
                                            "type": "integer"
                                        },
                                        "requiredMemory": {
                                            "type": "integer"
                                        },
                                        "requiredHostTypes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "operatingSystem": {
                                                        "type": "string"
                                                    },
                                                    "operatingSystemVersion": {
                                                        "type": "string"
                                                    },
                                                    "cpuType": {
                                                        "type": "string"
                                                    },
                                                    "addressSpace": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        },
                                        "preferredHost": {
                                            "type": "object",
                                            "properties": {
                                                "entityType": {
                                                    "type": "string"
                                                },
                                                "entityId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "mountConfiguration": {
                                    "type": "object",
                                    "properties": {
                                        "isAutoMounted": {
                                            "type": "boolean"
                                        },
                                        "hasSystemWideMountPoints": {
                                            "type": "boolean"
                                        },
                                        "mountPoints": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "usageType": {
                                                        "type": "string"
                                                    },
                                                    "storageType": {
                                                        "type": "string"
                                                    },
                                                    "localPath": {
                                                        "type": "string"
                                                    },
                                                    "remotePath": {
                                                        "type": "string"
                                                    },
                                                    "mountOptions": {
                                                        "type": "string"
                                                    },
                                                    "fileSystemType": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "System with all parameters which should be modified.",
                        "x-examples": {
                            "application/json": {
                                "customName": "custom name for AS 59",
                                "description": "Application Server 59",
                                "isManaged": true,
                                "isOperational": true,
                                "targetStatus": "running",
                                "instanceAgentConfiguration": {
                                    "useSecureCommunication": false,
                                    "port": "55913",
                                    "authenticationType": "Basic",
                                    "userName": "x10adm",
                                    "password": "secret",
                                    "monitorDetails": false
                                },
                                "isAcEnabled": true,
                                "virtualHostNames": [
                                    {
                                        "virtualHostName": "x10as59.example.com",
                                        "isPrimary": true,
                                        "type": "DEFAULT",
                                        "network": "SandboxNetwork"
                                    }
                                ],
                                "consumedResourceConfiguration": {
                                    "consumesAllResources": false,
                                    "exclusivelyConsumedResources": [
                                        {
                                            "type": "Network Port",
                                            "consumedResource": "59"
                                        }
                                    ]
                                },
                                "instanceRequirements": {
                                    "requiredSAPS": 100,
                                    "requiredMemory": 512,
                                    "requiredHostTypes": [
                                        {
                                            "operatingSystem": "Linux",
                                            "operatingSystemVersion": "SLES 11",
                                            "cpuType": "X86_64",
                                            "addressSpace": 64
                                        }
                                    ],
                                    "preferredHost": {
                                        "entityType": "HOST",
                                        "entityId": "sandbox-vm-01"
                                    }
                                },
                                "mountConfiguration": {
                                    "isAutoMounted": false,
                                    "hasSystemWideMountPoints": false,
                                    "mountPoints": [
                                        {
                                            "usageType": "DEFAULT",
                                            "storageType": "NETFS",
                                            "localPath": "/usr/sap/X10",
                                            "remotePath": "filer:/vol/vol_X10_ci/usr/sap/X10",
                                            "mountOptions": "rw",
                                            "fileSystemType": "nfs"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    }
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Modifies an instance",
                "description": "Modifies an instance based on the instance ID provided by modifying the values provided.",
                "operationId": "Modify-Instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "instanceRequirements": {
                                    "type": "object",
                                    "properties": {
                                        "requiredSAPS": {
                                            "type": "integer"
                                        },
                                        "requiredMemory": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "System with all parameters which should be modified.",
                        "x-examples": {
                            "application/json": {
                                "instanceRequirements": {
                                    "requiredSAPS": 100,
                                    "requiredMemory": 256
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    }
                ]
            }
        },
        "/instances/{instanceId}/relations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all relations for an instance",
                "description": "Returns all relations of an instance based on the instance ID provided. For pagination, use parameters 'offset' and 'limit'.",
                "operationId": "Get-Instance-Relations",
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "in": "query",
                        "name": "typeId",
                        "type": "string",
                        "description": "Filter by relation typeId example: \"PoolHosts\""
                    },
                    {
                        "in": "query",
                        "name": "predefined",
                        "type": "boolean",
                        "description": "Filter by relations isPredefined flag",
                        "default": true
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "parameters": [
                {
                    "$ref": "#/parameters/instanceId"
                }
            ]
        },
        "/instances/{instanceId}/validations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all validations of an instance",
                "description": "Returns all validations of an instance based on the instance ID provided. For pagination, use parameters 'offset' and 'limit'.",
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "type": "string",
                        "description": "Filter by validation name example: \"MntOptIgnored\""
                    },
                    {
                        "$ref": "#/parameters/severity"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ],
                "operationId": "Get-Instance-Validations"
            },
            "parameters": [
                {
                    "$ref": "#/parameters/instanceId"
                }
            ]
        },
        "/logs": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns a list of logs",
                "description": "Returns a list of (non-archived) logs. For pagination, use parameters 'offset' and 'limit'. For filtering, use parameters 'id', 'type', 'days', 'entity', 'action' and 'status'. To embed log entries, use parameter 'embed'.",
                "operationId": "Get-Logs",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "type": "string",
                        "description": "Show only logs of given type. default: operation example: \"operation\""
                    },
                    {
                        "in": "query",
                        "name": "days",
                        "type": "string",
                        "description": "Show only logs created within the last X days. Any positive natural number <= 10000 or 'all', to show all logs. default: 7 example: \"7\""
                    },
                    {
                        "in": "query",
                        "name": "entity",
                        "type": "string",
                        "description": "Show only logs affecting the given entity. For operation logs, this can be the ID of an instance or host. For change logs the affected object. example: \"hostname\""
                    },
                    {
                        "in": "query",
                        "name": "activity",
                        "type": "string",
                        "description": "Show only operation logs for the given activity ID or activity number. example: \"42\""
                    },
                    {
                        "in": "query",
                        "name": "action",
                        "type": "string",
                        "description": "Show only operation logs with the given action. example: \"Stop\""
                    },
                    {
                        "$ref": "#/parameters/status"
                    },
                    {
                        "$ref": "#/parameters/embed"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            }
        },
        "/logs/{logId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns a log",
                "description": "Returns a (non-archived) log based on the log ID provided.",
                "operationId": "Get-Log-with-Id",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/embed"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "logId",
                    "in": "path",
                    "type": "string",
                    "required": true,
                    "description": "Log ID example: \"42\""
                }
            ]
        },
        "/logs/{logId}/entries": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns a list of log entries",
                "description": "Returns a list of log entries based on the log ID provided. For pagination, use parameters 'offset' and 'limit'. For filtering, use parameter 'severity'.",
                "operationId": "Get-log-entries",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/severity"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "logId",
                    "in": "path",
                    "type": "string",
                    "required": true,
                    "description": "Log ID example: \"42\""
                }
            ]
        },
        "/pools": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns a list of pools and pool containers",
                "description": "Returns a list of pools and pool containers. For pagination, use parameters 'offset' and 'limit'. For filtering, use parameters 'name', 'type', 'parent' and 'query'. To embed children, entities or relations, use parameter 'embed'.",
                "operationId": "Get-Pools",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "type": "string",
                        "description": "Filter by name. Multiple values can be passed. example: \"Production\""
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "type": "string",
                        "description": "Show only pools or pool containers. example: \"Pool\""
                    },
                    {
                        "in": "query",
                        "name": "parent",
                        "type": "string",
                        "description": "Filter by parent pool container. To get all root pools and containers (without parent), specify ' '. example: \"ParentContainer\""
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/embed"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Updates multiple pools",
                "description": "Updates multiple pools or creates new ones if they do not exist. Currently it is not supported to create pool containers and child pools for those newly created pool containers within one request.",
                "operationId": "Modify-Multiple-Pools",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "operation": {
                                    "type": "string"
                                },
                                "pools": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "parent": {
                                                "type": "object",
                                                "properties": {
                                                    "entityId": {
                                                        "type": "string"
                                                    },
                                                    "entityType": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "An mass patch request object which contains the operation to be performed and a list of entities with all parameters or just those that need to be updated.",
                        "x-examples": {
                            "application/json": {
                                "operation": "CREATE_OR_UPDATE",
                                "pools": [
                                    {
                                        "type": "Pool",
                                        "name": "Production",
                                        "description": "The production pool",
                                        "parent": {
                                            "entityId": "Datacenter1",
                                            "entityType": "POOL"
                                        }
                                    },
                                    {
                                        "type": "Pool",
                                        "name": "Quality",
                                        "description": "The quality pool",
                                        "parent": {
                                            "entityId": "Datacenter1",
                                            "entityType": "POOL"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "409": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Creates a new pool",
                "description": "Creates a new pool. In the request body, include an: Pool or pool container with all required parameters.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "parent": {
                                    "type": "object",
                                    "properties": {
                                        "entityId": {
                                            "type": "string"
                                        },
                                        "entityType": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Pool or pool container with all required parameters.",
                        "x-examples": {
                            "application/json": {
                                "type": "Pool",
                                "name": "Production",
                                "description": "The production pool",
                                "parent": {
                                    "entityId": "Datacenter1",
                                    "entityType": "POOL"
                                }
                            }
                        }
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    }
                ],
                "operationId": "Create-Pool"
            }
        },
        "/pools/{poolName}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns a pool or pool container",
                "description": "Returns a pool or pool container based on the pool name provided. To embed children, entities or relations, use parameter 'embed'.",
                "operationId": "Get-Pool-With-Name",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/embed"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "poolName",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ],
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Modifies a pool",
                "description": "Modifies a pool based on the pool name provided by modifying the values provided.",
                "operationId": "Modify-Pool",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "responses": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "entity": {
                                                "type": "object",
                                                "properties": {
                                                    "entityType": {
                                                        "type": "string"
                                                    },
                                                    "entityId": {
                                                        "type": "string"
                                                    },
                                                    "links": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "href": {
                                                                    "type": "string"
                                                                },
                                                                "rel": {
                                                                    "type": "string"
                                                                },
                                                                "method": {
                                                                    "type": "string"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "operation": {
                                                "type": "string"
                                            },
                                            "status": {
                                                "type": "integer"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Pool or pool container with all parameters which should be modified.",
                        "x-examples": {
                            "application/json": {
                                "responses": [
                                    {
                                        "entity": {
                                            "entityType": "POOL",
                                            "entityId": "Production",
                                            "links": [
                                                {
                                                    "href": "https://localhost:50001/lama-api/pools/Production",
                                                    "rel": "self",
                                                    "method": "GET"
                                                }
                                            ]
                                        },
                                        "operation": "UPDATE",
                                        "status": 200
                                    }
                                ]
                            }
                        }
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "parent": {
                                    "type": "object",
                                    "properties": {
                                        "entityId": {
                                            "type": "string"
                                        },
                                        "entityType": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Pool or pool container with all required parameters.",
                        "x-examples": {
                            "application/json": {
                                "name": "Production",
                                "description": "The moved production pool",
                                "parent": {
                                    "entityId": "Datacenter2",
                                    "entityType": "POOL"
                                }
                            }
                        }
                    }
                ],
                "summary": "Updates a pool",
                "description": "Updates a pool based on the pool name provided by replacing it with the new values provided.",
                "operationId": "Update-Pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ]
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Deletes a pool",
                "description": "Deletes a pool based on the pool name provided.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    }
                ],
                "operationId": "Delete-Pool"
            }
        },
        "/pools/{poolName}/children": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all children of a pool container",
                "description": "Returns all child pools and pool containers of a pool container based on the pool name provided. For pagination, use parameters 'offset' and 'limit'.",
                "operationId": "Get-Pool-Childrens",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "type": "string",
                        "description": "Show only pools or pool containers. example: \"Pool\""
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "poolName",
                    "in": "path",
                    "type": "string",
                    "required": true,
                    "description": "Pool Name example: \"Production\""
                }
            ]
        },
        "/pools/{poolName}/entities": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all system and host entities assigned to a pool",
                "description": "Returns all system and host entities assigned to a pool based on the pool name provided. For pagination, use parameters 'offset' and 'limit'.",
                "operationId": "Get-Pool-Entities",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    },
                    {
                        "in": "query",
                        "name": "entityType",
                        "type": "string",
                        "description": "Show only systems or hosts. example: \"System\""
                    }
                ]
            },
            "parameters": [
                {
                    "name": "poolName",
                    "in": "path",
                    "type": "string",
                    "required": true
                }
            ]
        },
        "/pools/{poolName}/relations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all relations of a pool or pool container",
                "description": "Returns all relations of a pool or pool container based on the pool name provided. For pagination, use parameters 'offset' and 'limit'.",
                "operationId": "Get-Pool-Relations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "in": "query",
                        "name": "typeId",
                        "type": "string",
                        "description": "Filter by relation typeId example: \"PoolHosts\""
                    },
                    {
                        "in": "query",
                        "name": "predefined",
                        "type": "boolean",
                        "description": "Filter by relations isPredefined flag example: true"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "parameters": [
                {
                    "name": "poolName",
                    "in": "path",
                    "type": "string",
                    "required": true,
                    "description": "Pool Name example: \"Production\""
                }
            ]
        },
        "/search": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Trigger a full text search",
                "description": "Search for the query provided and return the search results. For pagination, use parameters 'offset' and 'limit'. To restrict the search to certain entity types, use parameter 'entityType'. Search supports the following entity types: Activity, System, Instance, Host, Pool. To specify the search language, use parameter 'language'.",
                "operationId": "Search",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "type": "string",
                        "required": true,
                        "description": "The query string. The following special characters are supported as part of a query: ? - wildcard matching a single character (not allowed as first character); * - wildcard matching multiple characters (not allowed as first character); \"...\" - match phrase instead of single words; && - boolean AND operator; || - boolean OR operator; ! - boolean NOT operator; + - require term; - - prohibit term; (...) - group terms; \\ - escape special characters: + - && || ! ( ) { } [ ] ^ \" ~ * ? : . Make sure to URL encode the query. example: \"XYZ\""
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "in": "query",
                        "name": "entityType",
                        "type": "string",
                        "description": "The type of the entity to search for. Multiple values can be passed. If not specified, all entity types will be searched. example: \"System\""
                    },
                    {
                        "in": "query",
                        "name": "language",
                        "type": "string",
                        "description": "Lowercase two-letter ISO-639 language code. default: en example: \"de\""
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            }
        },
        "/systems": {
            "post": {
                "responses": {
                    "201": {
                        "description": ""
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "409": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Creates a new system",
                "description": "Creates a new system. In the request body, include an: System with all required parameters.",
                "operationId": "Create-System",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "sid": {
                                    "type": "string"
                                },
                                "hostname": {
                                    "type": "string"
                                },
                                "pool": {
                                    "type": "string"
                                },
                                "systemType": {
                                    "type": "string"
                                },
                                "instances": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "sid": {
                                                "type": "string"
                                            },
                                            "instanceType": {
                                                "type": "string"
                                            },
                                            "instanceSubType": {
                                                "type": "string"
                                            },
                                            "isManaged": {
                                                "type": "boolean"
                                            },
                                            "isOperational": {
                                                "type": "boolean"
                                            },
                                            "installationHostname": {
                                                "type": "string"
                                            },
                                            "databaseConfiguration": {
                                                "type": "object",
                                                "properties": {
                                                    "databaseName": {
                                                        "type": "string"
                                                    },
                                                    "databaseType": {
                                                        "type": "string"
                                                    },
                                                    "managerUserName": {
                                                        "type": "string"
                                                    },
                                                    "managerPassword": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "isAcEnabled": {
                                                "type": "boolean"
                                            },
                                            "instanceNumber": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "System with all required parameters.",
                        "x-examples": {
                            "application/json": {
                                "sid": "X10",
                                "hostname": "simdbx10",
                                "pool": "Sandbox",
                                "systemType": "NetWeaver ABAP",
                                "instances": [
                                    {
                                        "sid": "X10",
                                        "instanceType": "System Database",
                                        "instanceSubType": "ABAP",
                                        "isManaged": true,
                                        "isOperational": true,
                                        "installationHostname": "simdbx10",
                                        "databaseConfiguration": {
                                            "databaseName": "X10",
                                            "databaseType": "SAP",
                                            "managerUserName": "control",
                                            "managerPassword": "secret"
                                        },
                                        "isAcEnabled": false
                                    },
                                    {
                                        "sid": "X10",
                                        "instanceType": "Central Application Server",
                                        "instanceSubType": "ABAP",
                                        "isManaged": true,
                                        "isOperational": true,
                                        "installationHostname": "simci00x10",
                                        "instanceNumber": "00",
                                        "isAcEnabled": false
                                    },
                                    {
                                        "sid": "X10",
                                        "instanceType": "Application Server",
                                        "instanceSubType": "ABAP",
                                        "isManaged": true,
                                        "isOperational": true,
                                        "installationHostname": "simas10x10",
                                        "instanceNumber": "10",
                                        "isAcEnabled": false
                                    }
                                ]
                            }
                        }
                    }
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all registered systems",
                "description": "Returns all registered systems. For pagination, use parameters 'offset' and 'limit'. For filtering, use parameter 'pool'. To embed instances, relations, intersystem dependencies and validations use parameter 'embed'.",
                "operationId": "Get-Systems",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "in": "query",
                        "name": "invalidsOnly",
                        "type": "boolean",
                        "description": "Flag indicating whether only invalid entities should be shown. example: true"
                    },
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "in": "query",
                        "name": "pool",
                        "type": "string",
                        "description": "Filter by pool name or pool container name. Multiple values can be passed. example: \"Production\""
                    },
                    {
                        "in": "query",
                        "name": "systemType",
                        "type": "string",
                        "description": "Filter by system type. Multiple values can be passed. example: \"NetWeaver ABAP\""
                    },
                    {
                        "$ref": "#/parameters/embed"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Updates multiple systems",
                "description": "Updates multiple systems or creates new ones if they do not exist.",
                "operationId": "Update-Multiple-Systems",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "operation": {
                                    "type": "string"
                                },
                                "systems": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "customProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "key": {
                                                            "type": "string"
                                                        },
                                                        "isSecure": {
                                                            "type": "boolean"
                                                        },
                                                        "value": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "characterizations": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "characteristic": {
                                                            "type": "string"
                                                        },
                                                        "characteristicValue": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "An mass patch request object which contains the operation to be performed and a list of entities with all parameters or just those that need to be updated.",
                        "x-examples": {
                            "application/json": {
                                "operation": "PARTIAL_UPDATE",
                                "systems": [
                                    {
                                        "id": "SystemID.T01.SystemHost.sapt01.example.com",
                                        "customProperties": [
                                            {
                                                "key": "customProperty",
                                                "isSecure": false,
                                                "value": "test"
                                            }
                                        ],
                                        "characterizations": [
                                            {
                                                "characteristic": "Datacenter",
                                                "characteristicValue": "Europe"
                                            }
                                        ]
                                    },
                                    {
                                        "id": "SystemID.T02.SystemHost.sapt02.example.com",
                                        "customProperties": [
                                            {
                                                "key": "customProperty",
                                                "isSecure": false,
                                                "value": "testing"
                                            }
                                        ],
                                        "characterizations": [
                                            {
                                                "characteristic": "Datacenter",
                                                "characteristicValue": "Europe"
                                            }
                                        ]
                                    }
                                ]
                            }
                        }
                    }
                ]
            }
        },
        "/systems/{systemId}/instances": {
            "post": {
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "409": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Creates a new instance of a system",
                "description": "Creates a new instance of a system based on the system ID provided.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "sid": {
                                    "type": "string"
                                },
                                "systemId": {
                                    "type": "string"
                                },
                                "instanceType": {
                                    "type": "string"
                                },
                                "instanceSubType": {
                                    "type": "string"
                                },
                                "isManaged": {
                                    "type": "boolean"
                                },
                                "isOperational": {
                                    "type": "boolean"
                                },
                                "installationHostname": {
                                    "type": "string"
                                },
                                "instanceNumber": {
                                    "type": "string"
                                },
                                "isAcEnabled": {
                                    "type": "boolean"
                                }
                            }
                        },
                        "description": "Instance with all required parameters. ",
                        "x-examples": {
                            "application/json": {
                                "sid": "X10",
                                "systemId": "SystemID.X10.SystemHost.simdbx10",
                                "instanceType": "Application Server",
                                "instanceSubType": "ABAP",
                                "isManaged": true,
                                "isOperational": true,
                                "installationHostname": "x10as59.example.com",
                                "instanceNumber": "59",
                                "isAcEnabled": false
                            }
                        }
                    }
                ],
                "operationId": "Create-System-Instance"
            },
            "parameters": [
                {
                    "$ref": "#/parameters/systemId"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all instances of a system",
                "description": "Returns all instances of a system based on the system ID provided. For pagination, use parameters 'offset' and 'limit'. To embed relations and validations use parameter 'embed'.",
                "operationId": "Get-System-Instances",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/id"
                    },
                    {
                        "in": "query",
                        "name": "instanceType",
                        "type": "string",
                        "description": "Filter by instance type. Multiple values can be passed. example: \"Application Server\""
                    },
                    {
                        "$ref": "#/parameters/embed"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Updates multiple instances",
                "description": "Updates multiple instances or creates new ones if they do not exist.",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "operation": {
                                    "type": "string"
                                },
                                "instances": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "sid": {
                                                "type": "string"
                                            },
                                            "pool": {
                                                "type": "string"
                                            },
                                            "systemId": {
                                                "type": "string"
                                            },
                                            "instanceType": {
                                                "type": "string"
                                            },
                                            "instanceSubType": {
                                                "type": "string"
                                            },
                                            "isManaged": {
                                                "type": "boolean"
                                            },
                                            "isOperational": {
                                                "type": "boolean"
                                            },
                                            "installationHostname": {
                                                "type": "string"
                                            },
                                            "communicationHostname": {
                                                "type": "string"
                                            },
                                            "instanceNumber": {
                                                "type": "string"
                                            },
                                            "instanceAgentConfiguration": {
                                                "type": "object",
                                                "properties": {
                                                    "useSecureCommunication": {
                                                        "type": "boolean"
                                                    },
                                                    "port": {
                                                        "type": "string"
                                                    },
                                                    "monitorDetails": {
                                                        "type": "boolean"
                                                    },
                                                    "profileParameters": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "isAcEnabled": {
                                                "type": "boolean"
                                            },
                                            "consumedResourceConfiguration": {
                                                "type": "object",
                                                "properties": {
                                                    "consumesAllResources": {
                                                        "type": "boolean"
                                                    },
                                                    "exclusivelyConsumedResources": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    }
                                                }
                                            },
                                            "instanceRequirements": {
                                                "type": "object",
                                                "properties": {
                                                    "requiredSAPS": {
                                                        "type": "integer"
                                                    },
                                                    "requiredMemory": {
                                                        "type": "integer"
                                                    }
                                                }
                                            },
                                            "assignedHost": {
                                                "type": "object",
                                                "properties": {
                                                    "entityType": {
                                                        "type": "string"
                                                    },
                                                    "entityId": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "An mass patch request object which contains the operation to be performed and a list of entities with all parameters or just those that need to be updated.",
                        "x-examples": {
                            "application/json": {
                                "operation": "CREATE_OR_UPDATE",
                                "instances": [
                                    {
                                        "sid": "T01",
                                        "pool": "Development",
                                        "systemId": "SystemID.T01.SystemHost.sapt01.example.com",
                                        "instanceType": "Application Server",
                                        "instanceSubType": "ABAP",
                                        "isManaged": true,
                                        "isOperational": false,
                                        "installationHostname": "sapt01.example.com",
                                        "communicationHostname": "sapt01.example.com",
                                        "instanceNumber": "11",
                                        "instanceAgentConfiguration": {
                                            "useSecureCommunication": true,
                                            "port": "50000",
                                            "monitorDetails": false,
                                            "profileParameters": {}
                                        },
                                        "isAcEnabled": false,
                                        "consumedResourceConfiguration": {
                                            "consumesAllResources": false,
                                            "exclusivelyConsumedResources": []
                                        },
                                        "instanceRequirements": {
                                            "requiredSAPS": 0,
                                            "requiredMemory": 0
                                        },
                                        "assignedHost": {
                                            "entityType": "HOST",
                                            "entityId": "sapt01.example.com"
                                        }
                                    },
                                    {
                                        "sid": "T02",
                                        "pool": "Development",
                                        "systemId": "SystemID.T02.SystemHost.sapt02.example.com",
                                        "instanceType": "Application Server",
                                        "instanceSubType": "ABAP",
                                        "isManaged": true,
                                        "isOperational": false,
                                        "installationHostname": "sapt02.example.com",
                                        "communicationHostname": "sapt02.example.com",
                                        "instanceNumber": "10",
                                        "instanceAgentConfiguration": {
                                            "useSecureCommunication": true,
                                            "port": "50000",
                                            "monitorDetails": false,
                                            "profileParameters": {}
                                        },
                                        "isAcEnabled": false,
                                        "consumedResourceConfiguration": {
                                            "consumesAllResources": false,
                                            "exclusivelyConsumedResources": []
                                        },
                                        "instanceRequirements": {
                                            "requiredSAPS": 0,
                                            "requiredMemory": 0
                                        },
                                        "assignedHost": {
                                            "entityType": "HOST",
                                            "entityId": "sapt02.example.com"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ],
                "operationId": "Update-Multiple-Instances"
            }
        },
        "/systems/{systemId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns a system",
                "description": "Returns a system based on the system ID provided. To embed instances, relations and validations use parameter 'embed'.",
                "operationId": "Get-System",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/embed"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "parameters": [
                {
                    "$ref": "#/parameters/systemId"
                }
            ],
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Deletes a system",
                "description": "Deletes a system based on the system ID provided.",
                "operationId": "Delete-System",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Updates a system",
                "description": "Updates a system based on the system ID provided by replacing it with the new values provided.",
                "operationId": "Update-System",
                "produces": [
                    "application/json"
                ],
                "consumes": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "customName": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "sid": {
                                    "type": "string"
                                },
                                "pool": {
                                    "type": "string"
                                },
                                "systemType": {
                                    "type": "string"
                                },
                                "provisioningConfiguration": {
                                    "type": "object",
                                    "properties": {
                                        "provisioningType": {
                                            "type": "string"
                                        },
                                        "provisioningEnablement": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "isTDMSControlSystem": {
                                            "type": "boolean"
                                        },
                                        "isBWSourceSystem": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "System with all required parameters. ",
                        "x-examples": {
                            "application/json": {
                                "customName": "Custom name for System X10",
                                "description": "System X10",
                                "sid": "X10",
                                "pool": "Sandbox",
                                "systemType": "NetWeaver ABAP",
                                "provisioningConfiguration": {
                                    "provisioningType": "Installation",
                                    "provisioningEnablement": [
                                        "Standalone PCA"
                                    ],
                                    "isTDMSControlSystem": false,
                                    "isBWSourceSystem": false
                                }
                            }
                        }
                    }
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Modifies a system",
                "description": "Modifies a system based on the system ID provided by modifying the values provided.",
                "operationId": "Modify-System",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "pool": {
                                    "type": "string"
                                },
                                "interSystemDependencies": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "typeId": {
                                                "type": "string"
                                            },
                                            "sourceEntityRole": {
                                                "type": "string"
                                            },
                                            "sourceEntity": {
                                                "type": "object",
                                                "properties": {
                                                    "entityType": {
                                                        "type": "string"
                                                    },
                                                    "entityId": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "targetEntityRole": {
                                                "type": "string"
                                            },
                                            "targetEntity": {
                                                "type": "object",
                                                "properties": {
                                                    "entityType": {
                                                        "type": "string"
                                                    },
                                                    "entityId": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "System with all parameters which should be modified.",
                        "x-examples": {
                            "application/json": {
                                "pool": "Production",
                                "interSystemDependencies": [
                                    {
                                        "typeId": "InterSystemStartDependency",
                                        "sourceEntityRole": "Dependent",
                                        "sourceEntity": {
                                            "entityType": "SET",
                                            "entityId": "SystemID.T02.SystemHost.sapt02.example.com.SetType.Set_Application_Server"
                                        },
                                        "targetEntityRole": "Dependency",
                                        "targetEntity": {
                                            "entityType": "SET",
                                            "entityId": "SystemID.T01.SystemHost.sapt01.example.com.SetType.Set_Database"
                                        }
                                    }
                                ]
                            }
                        }
                    }
                ]
            }
        },
        "/systems/{systemId}/instances/{instanceId}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns an instance",
                "description": "Returns an instance based on the system ID and instance ID provided. To embed relations and validations use parameter 'embed'.",
                "operationId": "Get-System-Instance",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/query"
                    },
                    {
                        "$ref": "#/parameters/embed"
                    }
                ]
            },
            "parameters": [
                {
                    "$ref": "#/parameters/systemId"
                },
                {
                    "$ref": "#/parameters/instanceId"
                }
            ],
            "delete": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Deletes an instance",
                "description": "Deletes an instance based on the system ID and instance ID provided.",
                "operationId": "Delete-System-Instance",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    }
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Updates an instance",
                "description": "Updates an instance based on the system ID and instance ID provided by replacing it with the new values provided.",
                "operationId": "Update-System-Instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "customName": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "isManaged": {
                                    "type": "boolean"
                                },
                                "isOperational": {
                                    "type": "boolean"
                                },
                                "targetStatus": {
                                    "type": "string"
                                },
                                "instanceAgentConfiguration": {
                                    "type": "object",
                                    "properties": {
                                        "useSecureCommunication": {
                                            "type": "boolean"
                                        },
                                        "port": {
                                            "type": "string"
                                        },
                                        "authenticationType": {
                                            "type": "string"
                                        },
                                        "userName": {
                                            "type": "string"
                                        },
                                        "password": {
                                            "type": "string"
                                        },
                                        "monitorDetails": {
                                            "type": "boolean"
                                        }
                                    }
                                },
                                "isAcEnabled": {
                                    "type": "boolean"
                                },
                                "virtualHostNames": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "virtualHostName": {
                                                "type": "string"
                                            },
                                            "isPrimary": {
                                                "type": "boolean"
                                            },
                                            "type": {
                                                "type": "string"
                                            },
                                            "network": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                },
                                "consumedResourceConfiguration": {
                                    "type": "object",
                                    "properties": {
                                        "consumesAllResources": {
                                            "type": "boolean"
                                        },
                                        "exclusivelyConsumedResources": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "consumedResource": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "instanceRequirements": {
                                    "type": "object",
                                    "properties": {
                                        "requiredSAPS": {
                                            "type": "integer"
                                        },
                                        "requiredMemory": {
                                            "type": "integer"
                                        },
                                        "requiredHostTypes": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "operatingSystem": {
                                                        "type": "string"
                                                    },
                                                    "operatingSystemVersion": {
                                                        "type": "string"
                                                    },
                                                    "cpuType": {
                                                        "type": "string"
                                                    },
                                                    "addressSpace": {
                                                        "type": "integer"
                                                    }
                                                }
                                            }
                                        },
                                        "preferredHost": {
                                            "type": "object",
                                            "properties": {
                                                "entityType": {
                                                    "type": "string"
                                                },
                                                "entityId": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                },
                                "mountConfiguration": {
                                    "type": "object",
                                    "properties": {
                                        "isAutoMounted": {
                                            "type": "boolean"
                                        },
                                        "hasSystemWideMountPoints": {
                                            "type": "boolean"
                                        },
                                        "mountPoints": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "usageType": {
                                                        "type": "string"
                                                    },
                                                    "storageType": {
                                                        "type": "string"
                                                    },
                                                    "localPath": {
                                                        "type": "string"
                                                    },
                                                    "remotePath": {
                                                        "type": "string"
                                                    },
                                                    "mountOptions": {
                                                        "type": "string"
                                                    },
                                                    "fileSystemType": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "description": "System with all parameters which should be modified.",
                        "x-examples": {
                            "application/json": {
                                "customName": "custom name for AS 59",
                                "description": "Application Server 59",
                                "isManaged": true,
                                "isOperational": true,
                                "targetStatus": "running",
                                "instanceAgentConfiguration": {
                                    "useSecureCommunication": false,
                                    "port": "55913",
                                    "authenticationType": "Basic",
                                    "userName": "x10adm",
                                    "password": "secret",
                                    "monitorDetails": false
                                },
                                "isAcEnabled": true,
                                "virtualHostNames": [
                                    {
                                        "virtualHostName": "x10as59.example.com",
                                        "isPrimary": true,
                                        "type": "DEFAULT",
                                        "network": "SandboxNetwork"
                                    }
                                ],
                                "consumedResourceConfiguration": {
                                    "consumesAllResources": false,
                                    "exclusivelyConsumedResources": [
                                        {
                                            "type": "Network Port",
                                            "consumedResource": "59"
                                        }
                                    ]
                                },
                                "instanceRequirements": {
                                    "requiredSAPS": 100,
                                    "requiredMemory": 512,
                                    "requiredHostTypes": [
                                        {
                                            "operatingSystem": "Linux",
                                            "operatingSystemVersion": "SLES 11",
                                            "cpuType": "X86_64",
                                            "addressSpace": 64
                                        }
                                    ],
                                    "preferredHost": {
                                        "entityType": "HOST",
                                        "entityId": "sandbox-vm-01"
                                    }
                                },
                                "mountConfiguration": {
                                    "isAutoMounted": false,
                                    "hasSystemWideMountPoints": false,
                                    "mountPoints": [
                                        {
                                            "usageType": "DEFAULT",
                                            "storageType": "NETFS",
                                            "localPath": "/usr/sap/X10",
                                            "remotePath": "filer:/vol/vol_X10_ci/usr/sap/X10",
                                            "mountOptions": "rw",
                                            "fileSystemType": "nfs"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string"
                    }
                ]
            },
            "patch": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Modifies an instance",
                "description": "Modifies an instance based on the system ID and instance ID provided by modifying the values provided.",
                "operationId": "Modify-System-Instance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "instanceRequirements": {
                                    "type": "object",
                                    "properties": {
                                        "requiredSAPS": {
                                            "type": "integer"
                                        },
                                        "requiredMemory": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        },
                        "description": "System with all parameters which should be modified.",
                        "x-examples": {
                            "application/json": {
                                "instanceRequirements": {
                                    "requiredSAPS": 100,
                                    "requiredMemory": 256
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/systems/{systemId}/instances/{instanceId}/relations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all relations for an instances",
                "description": "Returns all relations of an instance based on the system ID and instance ID provided. For pagination, use parameters 'offset' and 'limit'.",
                "operationId": "Get-System-Instance-Relations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "in": "query",
                        "name": "typeId",
                        "type": "string",
                        "description": "Filter by relation typeId example: \"PoolHosts\""
                    },
                    {
                        "in": "query",
                        "name": "predefined",
                        "type": "boolean",
                        "description": "Filter by relations isPredefined flag example: true"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "parameters": [
                {
                    "$ref": "#/parameters/systemId"
                },
                {
                    "$ref": "#/parameters/instanceId"
                }
            ]
        },
        "/systems/{systemId}/instances/{instanceId}/validations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    }
                },
                "summary": "Returns all validations of an instance",
                "description": "Returns all validations of a instance based on the system ID and instance ID provided. For pagination, use parameters 'offset' and 'limit'.",
                "operationId": "Get-System-Instance-Validations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "in": "query",
                        "name": "name",
                        "type": "string",
                        "description": "Filter by validation name example: \"MntOptIgnored\""
                    },
                    {
                        "$ref": "#/parameters/severity"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "parameters": [
                {
                    "$ref": "#/parameters/systemId"
                },
                {
                    "$ref": "#/parameters/instanceId"
                }
            ]
        },
        "/systems/{systemId}/isd": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all intersystem dependencies for a system",
                "description": "Returns all intersystem dependencies the sets and instances of this system have to the sets and instances of other systems. For pagination, use parameters 'offset' and 'limit'.",
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ],
                "operationId": "Get-System-Dependencies",
                "produces": [
                    "application/json"
                ]
            },
            "parameters": [
                {
                    "$ref": "#/parameters/systemId"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "400": {
                        "description": ""
                    },
                    "403": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Updates the intersystem dependencies of a system",
                "description": "Updates the intersystem dependencies of a system based on the system ID provided by replacing them with the new values provided. Intersystem dependencies are usually not defined on individual instances, but on sets. An intersystem dependency can be specified either using the sourceEntity and targetEntity parameters, or using sourceSystem, sourceInstanceType, sourceInstanceSubType (optional) and targetSystem, targetInstanceType and targetInstanceSubType (optional) parameters (see examples).",
                "operationId": "Update-Intersystem-dependencies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "typeId": {
                                        "type": "string"
                                    },
                                    "sourceEntityRole": {
                                        "type": "string"
                                    },
                                    "sourceSystem": {
                                        "type": "object",
                                        "properties": {
                                            "entityType": {
                                                "type": "string"
                                            },
                                            "entityId": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "sourceInstanceType": {
                                        "type": "string"
                                    },
                                    "targetEntityRole": {
                                        "type": "string"
                                    },
                                    "targetSystem": {
                                        "type": "object",
                                        "properties": {
                                            "entityType": {
                                                "type": "string"
                                            },
                                            "entityId": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "targetInstanceType": {
                                        "type": "string"
                                    }
                                }
                            }
                        },
                        "description": "The list of intersystem dependencies to set. An intersystem dependency can be specified either using the sourceEntity and targetEntity parameters, or using sourceSystem, sourceInstanceType, sourceInstanceSubType (optional) and targetSystem, targetInstanceType and targetInstanceSubType (optional) parameters (see examples).",
                        "x-examples": {
                            "FirstExample": [
                                {
                                    "typeId": "InterSystemStartDependency",
                                    "sourceEntityRole": "Dependent",
                                    "sourceEntity": {
                                        "entityType": "SET",
                                        "entityId": "SystemID.T02.SystemHost.sapt02.example.com.SetType.Set_Application_Server"
                                    },
                                    "targetEntityRole": "Dependency",
                                    "targetEntity": {
                                        "entityType": "SET",
                                        "entityId": "SystemID.T01.SystemHost.sapt01.example.com.SetType.Set_Database"
                                    }
                                }
                            ],
                            "SecondExample": [
                                {
                                    "typeId": "InterSystemStartDependency",
                                    "sourceEntityRole": "Dependent",
                                    "sourceSystem": {
                                        "entityType": "SYSTEM",
                                        "entityId": "SystemID.T02.SystemHost.sapt02.example.com"
                                    },
                                    "sourceInstanceType": "Application server instances",
                                    "targetEntityRole": "Dependency",
                                    "targetSystem": {
                                        "entityType": "SYSTEM",
                                        "entityId": "SystemID.T01.SystemHost.sapt01.example.com"
                                    },
                                    "targetInstanceType": "Databases"
                                }
                            ]
                        }
                    },
                    {
                        "in": "header",
                        "name": "x-csrf-token",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/changeId"
                    }
                ]
            }
        },
        "/systems/{systemId}/relations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {}
                        }
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": ""
                    }
                },
                "summary": "Returns all relations for a system",
                "description": "Returns all relations of a system based on the system ID provided. For pagination, use parameters 'offset' and 'limit'.",
                "operationId": "Get-System-Relatations",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "in": "query",
                        "name": "typeId",
                        "type": "string",
                        "description": "Filter by relation typeId example: \"PoolHosts\""
                    },
                    {
                        "in": "query",
                        "name": "predefined",
                        "type": "boolean",
                        "description": "Filter by relations isPredefined flag example: true"
                    },
                    {
                        "$ref": "#/parameters/fields"
                    }
                ]
            },
            "parameters": [
                {
                    "$ref": "#/parameters/systemId"
                }
            ]
        }
    },
    "basePath": "/lama-api",
    "definitions": {
        "Activity": {
            "type": "object",
            "properties": {
                "activityId": {
                    "type": "string"
                },
                "activityNumber": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "beginTime": {
                    "type": "string"
                },
                "endTime": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "href": {
                                "type": "string"
                            },
                            "rel": {
                                "type": "string"
                            },
                            "method": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "ActivityStepInteractionResponse": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                },
                "input": {
                    "type": "string"
                }
            },
            "title": "ActivityStepInteractionResponse"
        }
    },
    "parameters": {
        "activityId": {
            "name": "activityId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Activity ID or activity number. ",
            "default": "42"
        },
        "x-csrf-token": {
            "name": "x-csrf-token",
            "in": "header",
            "type": "string",
            "description": "Custom request header to protect agains Cross-Site-Request-Forgery. Only the existence of the header, not the value, is verified."
        },
        "offset": {
            "name": "offset",
            "in": "query",
            "type": "string",
            "description": "Number of results to skip before returning them. default: 0",
            "default": "10"
        },
        "limit": {
            "name": "limit",
            "in": "query",
            "type": "string",
            "description": "Maximum number of results to be returned. Specify -1 to set the number to unlimited. default: 50",
            "default": "10"
        },
        "id": {
            "name": "id",
            "in": "query",
            "type": "string",
            "default": "2",
            "description": "Filter by ID. Multiple values can be passed."
        },
        "severity": {
            "name": "severity",
            "in": "query",
            "type": "string",
            "description": "Retrieve only log entries with the severity given. Multiple values can be passed (optional)",
            "default": "ERROR"
        },
        "fields": {
            "name": "fields",
            "in": "query",
            "type": "string",
            "description": "Request a partial response by specifying the fields to be included/excluded using a comma-separated list of field names. Sub-fields can be included in parentheses '()' (Example: Specify 'field(subField)' to include only the subField). To specify the fields to be excluded, add '!' as first sign (Example: Specify '!field(subField)' to exclude only the subField).",
            "default": "items(message,severity)"
        },
        "embed": {
            "name": "embed",
            "in": "query",
            "type": "string",
            "description": "Request a partial response by specifying the fields to be included/excluded using a comma-separated list of field names. Sub-fields can be included in parentheses '()' (Example: Specify 'field(subField)' to include only the subField). To specify the fields to be excluded, add '!' as first sign (Example: Specify '!field(subField)' to exclude only the subField).",
            "default": "total,items(stepNumber,status)"
        },
        "status": {
            "name": "status",
            "in": "query",
            "type": "string",
            "description": "Filter by activity step status. Multiple values can be passed",
            "default": "failed"
        },
        "stepId": {
            "name": "stepId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Activity step ID or activity step number.",
            "default": "2"
        },
        "days": {
            "name": "days",
            "in": "query",
            "type": "string",
            "description": "Show only activities executed within the last X days. Any positive natural number n where 1 <= n <= 10000.",
            "default": "7"
        },
        "user": {
            "name": "user",
            "in": "query",
            "type": "string",
            "description": "Filter by user triggering the activity. Multiple values can be passed.",
            "default": "Administrator"
        },
        "query": {
            "name": "query",
            "in": "query",
            "type": "string",
            "description": "Search for the query provided using the full text search.",
            "default": "copy"
        },
        "hostname": {
            "name": "hostname",
            "in": "path",
            "type": "string",
            "description": "Host name of host.",
            "default": "hostname.domain",
            "required": true
        },
        "changeId": {
            "name": "changeId",
            "in": "query",
            "type": "string",
            "description": "If required, the change ID for the change to be performed.",
            "default": "0815"
        },
        "instanceId": {
            "name": "instanceId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "ID of instance. example: \"SystemID.X10.Number.00.InstanceHost.simcix10\""
        },
        "systemId": {
            "name": "systemId",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "ID of the system. example: \"SystemID.X10.SystemHost.simdbx10\""
        },
        "new-param": {
            "name": "new",
            "in": "query",
            "type": "string"
        }
    },
    "responses": {
        "Activity": {
            "description": "",
            "schema": {
                "type": "object",
                "properties": {
                    "activityId": {
                        "type": "string"
                    },
                    "activityNumber": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "beginTime": {
                        "type": "string"
                    },
                    "endTime": {
                        "type": "string"
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "href": {
                                    "type": "string"
                                },
                                "rel": {
                                    "type": "string"
                                },
                                "method": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            },
            "examples": {
                "application/json": {
                    "activityId": "process-c7c81fbf-203e-11e7-9917-000000665ce2",
                    "activityNumber": "42",
                    "status": "executing",
                    "user": "Administrator",
                    "description": "Start",
                    "beginTime": "2018-04-26T08:53:36.103Z",
                    "endTime": "2018-04-26T08:53:36.243Z",
                    "duration": 140,
                    "links": [
                        {
                            "href": "https://localhost:50001/lama-api/activities/42",
                            "rel": "self",
                            "method": "GET"
                        },
                        {
                            "href": "https://localhost:50001/lama-api/activities/42/steps",
                            "rel": "steps",
                            "method": "GET"
                        }
                    ]
                }
            }
        }
    },
    "securityDefinitions": {
        "Basic Authentication": {
            "type": "basic",
            "description": "Provide your username and password"
        }
    },
    "security": [
        {
            "Basic Authentication": []
        }
    ],
    "schemes": [
        "http",
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ]
}
