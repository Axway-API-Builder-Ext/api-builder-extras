# The name of the workflow node to appear in the actions and badge!
name: Elasticsearch Flow-Node

on:
  push:
    paths:
      - 'api-builder-plugin-fn-elasticsearch/**'
  pull_request:
    paths:
      - 'api-builder-plugin-fn-elasticsearch/**'
  release:
    types:
      - published

defaults:
  run:
    working-directory: api-builder-plugin-fn-elasticsearch

jobs:
  unit-tests:
    name: Unit tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Run unit tests
      env:
        CI: true
      run: |
        npm ci
        npm run build --if-present
        npm run unit-test

  integration-tests:
    name: Integration-tests
    runs-on: ubuntu-latest
    needs: unit-tests

    services:
      elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.0.0
        ports: 
          - 9200:9200
          - 9300:9300
        options: >-
          -e "discovery.type=single-node"
          --health-cmd "curl -f http://localhost:9200"
          --health-interval 30s
          --health-timeout 2s
          --health-retries 5
          --health-start-period 30s
    steps:
    - uses: actions/checkout@v1
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Show ES Logs
      run: |
        echo "Logs of ES-Service container: ${{ job.services.elasticsearch.id }}"
        docker logs "${{ job.services.elasticsearch.id }}"
    - name: Run integration tests
      env:
        CI: true
        ELASTICSEARCH_HOSTS: 'http://localhost:9200'
      run: |
        npm ci
        npm run build --if-present
        npm run integration-test

  publish-gpr:
    if: contains(github.event.release.tag_name, 'plugin-fn-elasticsearch')
    env:
      CI: true
    needs: integration-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://npm.pkg.github.com/
          scope: '@Axway-API-Builder-Ext'
      - name: Publish to GitHub package repo
        env:
            NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        run: |
          npm ci
          npm publish

  publish-npm:
    env:
      CI: true
    needs: [integration-tests, publish-gpr]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: Publish to NPM package repo
        env:
          NODE_AUTH_TOKEN: ${{secrets.npm_token}}
        run: |
          npm ci
          echo "//registry.npmjs.org/:_authToken=${{ secrets.npm_token }}" > ~/.npmrc
          npm publish --access public