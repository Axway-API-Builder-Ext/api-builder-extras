flow-nodes:
  elasticsearch:
    name: Elasticsearch
    icon: elasticsearch-icon.png
    description: 'Elasticsearch is a distributed, RESTful search and analytics engine capable of addressing a growing number of use cases. As the heart of the Elastic Stack, it centrally stores your data so you can discover the expected and uncover the unexpected. Learn more: https://www.elastic.co/guide/en/elasticsearch/reference/7.x/search-search.html'
    category: Elastic
    methods:
      search: 
        name: Search
        description: Allows you to execute a search query and get back search hits that match the query. The query can either be provided using a simple query string as a parameter, or using a request body. To ensure fast responses, the search API will respond with partial results if one or more shards fail. See Shard failures for more information.
        parameters:
          index:
            name: Index
            description: Comma-separated list or wildcard expression of index names used to limit the request.
            required: true
            initialType: string
            schema:
              type: string
          query:
            name: Query
            description: 'Defines the search definition using the Query DSL. Learn more: https://www.elastic.co/guide/en/elasticsearch/reference/7.x/query-dsl.html'
            required: false
            initialType: object
            schema:
              type: object
              options:
                multilineWrapper:
                  before: "{ \"query\": "
                  after: "\n}"
          from:
            name: From
            description: Defines the starting offset. Defaults to 0.
            required: false
            initialType: number
            schema:
              type: number
          size:
            name: Size
            description: Defines the number of hits to return. Defaults to 10.
            required: false
            initialType: number
            schema:
              type: number
          sort:
            name: Sort
            description: 'A comma-separated list of <field>:<direction> pairs.'
            required: false
            initialType: string
            schema:
              type: string
          _source:
            name: Include source
            description: True or false to return the _source field or not, or a list of fields to return.
            required: false
            initialType: boolean
            schema:
              default: true
              type: boolean
          _source_excludes:
            name: Exclude source fields
            description: A list of fields to exclude from the returned _source field.
            required: false
            initialType: array
            schema:
              type: array
          _source_includes:
            name: Include source fields
            description: A list of fields to extract and return from the _source field. 
            required: false
            initialType: array
            schema:
              type: array
          allow_no_indices:
            name: Allow no indices
            description: If true, the request does not return an error if a wildcard expression or _all value retrieves only missing or closed indices. This parameter also applies to index aliases that point to a missing or closed index.
            required: false
            group: Advanced Options
            initialType: boolean
            schema:
              default: false
              type: boolean
          allow_partial_search_results:
            name: Allow partial search results
            description: Indicates if an error should be returned if there is a partial search failure or timeout. Defaults to true.
            required: false
            group: Advanced Options
            initialType: boolean
            schema:
              default: true
              type: boolean
# Seems not supported by the Node-Library
#          default_operator:
#            description: The default operator for query string query (AND or OR). Defaults to OR.
#            required: false
#            group: Advanced Options
#            initialType: string
#            schema:
#              type: string
          request_cache:
            name: Request cache
            description: If true, request cache will be used for this request. Defaults to index level settings.
            required: false
            group: Advanced Options
            initialType: boolean
            schema:
              default: false
              type: boolean
          rest_total_hits_as_int:
            name: Total hits as int
            description: Indicates whether hits.total should be rendered as an integer or an object in the rest search response. Defaults to false.
            required: false
            group: Advanced Options
            initialType: boolean
            schema:
              default: false
              type: boolean
          batched_reduce_size:
            name: Batched reduce size
            description: The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large. Defaults to 512.
            required: false
            group: Expert Options
            initialType: number
            schema:
              type: number
          ccs_minimize_roundtrips:
            name: Minimize roundtrips
            description: Indicates whether network round-trips should be minimized as part of cross-cluster search requests execution. Defaults to true.
            required: false
            group: Expert Options
            initialType: boolean
            schema:
              default: true
              type: boolean
#          df:
#            description: Defines the field to use as default where no field prefix is given in the query string.
#            required: false
#            group: Expert Options
#            initialType: string
#            schema:
#              type: string
          docvalue_fields:
            name: DocValue fields
            description: A comma-separated list of fields to return as the docvalue representation of a field for each hit.
            required: false
            group: Expert Options
            initialType: string
            schema:
              type: string
          expand_wildcards:
            name: Expand wildcards
            description: Controls what kind of indices that wildcard expressions can expand to. Defaults to open.
            required: false
            group: Expert Options
            initialType: string
            schema:
              type: string
              enum:
                - all
                - open
                - closed
                - hidden
                - none
          explain:
            name: Explain
            description: If true, returns detailed information about score computation as part of a hit. Defaults to false.
            required: false
            group: Expert Options
            initialType: boolean
            schema:
              default: false
              type: boolean
          ignore_throttled:
            name: Ignore throttled
            description: If true, concrete, expanded or aliased indices will be ignored when throttled. Defaults to false.
            required: false
            group: Expert Options
            initialType: boolean
            schema:
              default: false
              type: boolean
          ignore_unavailable:
            name: Ignore unavailable
            description: If true, missing or closed indices are not included in the response. Defaults to false. 
            required: false
            group: Expert Options
            initialType: boolean
            schema:
              default: false
              type: boolean
          lenient:
            name: Lenient
            description: If true, format-based query failures (such as providing text to a numeric field) will be ignored. Defaults to false.
            required: false
            group: Advanced Options
            initialType: boolean
            schema:
              default: false
              type: boolean
          max_concurrent_shard_requests:
            name: Max concurrent shard requests
            description: Defines the number of concurrent shard requests per node this search executes concurrently. This value should be used to limit the impact of the search on the cluster in order to limit the number of concurrent shard requests. Defaults to 5.
            required: false
            group: Expert Options
            initialType: number
            schema:
              type: number
          pre_filter_shard_size:
            name: Pre filter shard size
            description: Defines a threshold that enforces a pre-filter roundtrip to prefilter search shards based on query rewriting if the number of shards the search request expands to exceeds the threshold. This filter roundtrip can limit the number of shards significantly if for instance a shard can not match any documents based on itâ€™s rewrite method ie. if date filters are mandatory to match but the shard bounds and the query are disjoint. Defaults to 128.
            required: false
            group: Expert Options
            initialType: number
            schema:
              type: number
          preference:
            name: Preference
            description: Specifies the node or shard the operation should be performed on. Random by default.
            required: false
            group: Expert Options
            initialType: string
            schema:
              type: string
          q:
            name: Lucene query
            description: Query in the Lucene query string syntax.
            required: false
            group: Expert Options
            initialType: string
            schema:
              type: string
          routing:
            name: Routing
            description: Specifies how long a consistent view of the index should be maintained for scrolled search.
            required: false
            group: Expert Options
            initialType: string
            schema:
              type: string
          search_type:
            name: Search type
            description: Defines the type of the search operation.
            required: false
            group: Expert Options
            initialType: string
            schema:
              type: string
              enum:
                - query_then_fetch
                - dfs_query_then_fetch
          seq_no_primary_term:
            name: Seq no primary term
            description: If true, returns sequence number and primary term of the last modification of each hit.
            required: false
            group: Expert Options
            initialType: boolean
            schema:
              default: false
              type: boolean
          stats:
            name: Stats
            description: Specific tag of the request for logging and statistical purposes.
            required: false
            group: Expert Options
            initialType: string
            schema:
              type: string
          stored_fields:
            name: Stored fields
            description: A comma-separated list of stored fields to return as part of a hit. 
            required: false
            group: Expert Options
            initialType: string
            schema:
              type: string
          suggest_field:
            name: Suggest field
            description: Specifies which field to use for suggestions. 
            required: false
            group: Suggestion Options
            initialType: string
            schema:
              type: string
          suggest_mode:
            name: Suggest mode
            description: Specifies suggest mode. Defaults to missing. 
            required: false
            group: Suggestion Options
            initialType: string
            schema:
              type: string
              enum:
                - always
                - missing
                - popular
          suggest_size:
            name: Suggest size
            description: Defines how many suggestions to return in response. 
            required: false
            group: Suggestion Options
            initialType: number
            schema:
              type: number
          suggest_text:
            name: Suggest text
            description: The source text for which the suggestions should be returned.
            required: false
            group: Suggestion Options
            initialType: string
            schema:
              type: string
          terminate_after:
            name: Terminate after
            description: The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.
            required: false
            group: Expert Options
            initialType: number
            schema:
              type: number
          timeout:
            name: Timeout
            description: Specifies the period of time to wait for a response. If no response is received before the timeout expires, the request fails and returns an error. Defaults to 30s.
            required: false
            group: Expert Options
            initialType: string
            schema:
              type: string
          track_scores:
            name: Track scores
            description: Indicates if the number of documents that match the query should be tracked.
            required: false
            group: Expert Options
            initialType: boolean
            schema:
              default: false
              type: boolean
          track_total_hits:
            name: Track total hits
            description: Indicates if the number of documents that match the query should be tracked.
            required: false
            group: Advanced Options
            initialType: boolean
            schema:
              default: false
              type: boolean
          typed_keys:
            name: Typed keys
            description: Specifies whether aggregation and suggester names should be prefixed by their respective types in the response.
            required: false
            group: Advanced Options
            initialType: boolean
            schema:
              default: false
              type: boolean
          version:
            name: Version
            description: If true, returns document version as part of a hit. 
            required: false
            group: Advanced Options
            initialType: boolean
            schema:
              default: false
              type: boolean
        outputs:
          next:
            name: Next
            description: Variable contains the Elasticsearch result
            context: $.result
            schema:
              type: object
          noResult:
            name: No result
            description: Exit used if the query result contains no hits.
            context: $.result
            schema:
              type: object
          missingIndex:
            name: Missing index
            description: Exit used if the index does not exists in Elasticsearch.
            context: $.error
            schema:
              type: object
          error:
            name: Error
            description: An unexpected error happened
            context: $.error
            schema:
              type: object
        
      getTemplate: 
        name: Get Index Template
        description: The comma separated names of the legacy index templates
        parameters:
          name:
            name: Index template name
            description: Name of the legacy index template.
            required: true
            initialType: string
            schema:
              type: string
          flatSettings:
            name: Flat settings
            description: "Return settings in flat format (default: false)"
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
        outputs:
          next:
            name: Next
            description: Return the index template loaded from Elasticsearch.
            context: $.indexTemplate
            schema:
              type: object
          notFound:
            name: Not found
            description: Exit used if the index template is not present in Elasticsearch.
            context: $.message
            schema:
              type: string
          error:
            name: Error
            description: An unexpected error happened
            context: $.error
            schema:
              type: object

      putTemplate: 
        name: Put Index Template
        description: Updates a legacy index template
        parameters:
          name:
            name: Index template name
            description: Name of the legacy index template.
            required: true
            initialType: string
            schema:
              type: string
          body:
            name: Template
            description: The template definition.
            required: true
            initialType: object
            schema:
              type: object
          updateWhenChanged:
            name: Update when changed
            description: If true, the flow-node load the existing template and if present, the version is compared. Only if the version of the given template is higher, the existing template will be updated. If there is no existing template a new template is created.
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          recreate:
            name: Recreate index template
            description: If true, the index template is always updated.
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          create:
            name: Create index template
            description: If true, this request cannot replace or update existing index templates. Defaults to false.
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          order:
            name: Order
            description: The order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers).
            required: false
            initialType: number
            schema:
              type: number
        outputs:
          next:
            name: Next
            description: The index template acknowledge message
            context: $.indexTemplateAck
            schema:
              type: object
          noUpdate:
            name: No update
            description: Message contains the reason, why the index template has not being updated.
            context: $.message
            schema:
              type: string
          error:
            name: Error
            description: An unexpected error happened
            context: $.error
            schema:
              type: object

      indexDocument: 
        name: Index document
        description: This method sends a document to Elasticsearch
        parameters:
          index:
            name: Index-Name
            description: The name of the index
            required: true
            schema:
              type: string
          body:
            name: Body
            description: "Body of the document to index"
            required: true
            schema:
              type: object
          id:
            name: ID
            description: Document ID. If not given Elasticsearch creates a unique document ID.
            required: false
            schema:
              type: string
          addTimestamp:
            name: Add timestamp
            description: If a field name (e.g. @timestamp) is given, the flow-node will add the current Unix epoch time to the body of the document.
            required: false
            initialType: string
            schema:
              type: string
          waitForActiveShards:
            name: Wait for active shards
            description: Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to all for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)
            required: false
            group: Advanced Options
            schema:
              type: string
          opType:
            name: Explicit operation type
            description: Defaults to index for requests with an explicit document ID, and to `create`for requests without an explicit document ID
            required: false
            group: Advanced Options
            initialType: string
            schema:
              type: string
              enum:
                - index
                - create
          refresh:
            name: Refresh
            description: If true then refresh the affected shards to make this operation visible to search, if wait_for then wait for a refresh to make this operation visible to search, if false (the default) then do nothing with refreshes.
            required: false
            group: Advanced Options
            initialType: string
            schema:
              type: string
              enum:
                - true
                - false
                - wait_for
          routing:
            name: Routing
            description: Specific routing value
            required: false
            group: Advanced Options
            initialType: string
            schema:
              type: string
          timeout:
            name: Timeout
            description: Explicit operation timeout. https://www.elastic.co/guide/en/elasticsearch/reference/7.x/common-options.html#time-units
            required: false
            group: Advanced Options
            initialType: string
            schema:
              type: string
          version:
            name: Version
            description: Explicit version number for concurrency control
            required: false
            group: Advanced Options
            initialType: string
            schema:
              type: string
          versionType:
            name: Version Type
            description: Specific version type
            required: false
            group: Advanced Options
            initialType: string
            schema:
              type: string
              enum:
                - internal
                - external
                - external_gte
          ifSeqNo:
            name: Version Type
            description: Only perform the index operation if the last operation that has changed the document has the specified sequence number
            required: false
            group: Advanced Options
            schema:
              type: number
          ifPrimaryTerm:
            name: If primary term
            description: Only perform the index operation if the last operation that has changed the document has the specified primary term
            required: false
            group: Advanced Options
            schema:
              type: number
          pipeline:
            name: Pipeline
            description: The pipeline id to preprocess incoming documents with
            required: false
            group: Advanced Options
            initialType: string
            schema:
              type: string
          requireAlias:
            name: Require alias
            description: When true, requires destination to be an alias. Default is false
            required: false
            group: Advanced Options
            initialType: boolean
            schema:
              default: false
              type: boolean
        returns:
          name: Next
          description: The response returned from Elasticsearch for the indexed document
          context: $.result
          schema:
            type: object
        throws:
          name: Error
          description: An unexpected error was encountered.
          context: $.error
          schema:
            type: object
            properties:
              message:
                type: string

      getMapping: 
        name: Get Index Mapping
        description: Gets an index mapping from Elasticsearch
        parameters:
          index:
            name: Index-Name
            description: Name of the index the mapping should be retrieved
            required: true
            initialType: string
            schema:
              type: string
          includeTypeName:
            name: Include type name
            description: "Whether to add the type name to the response (default: false)."
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          ignoreUnavailable:
            name: Include Unavailable
            description: Whether specified concrete indices should be ignored when unavailable (missing or closed).
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          allowNoIndices:
            name: Allow no indices
            description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes _all string or when no indices have been specified)
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          expandWildcards:
            name: Expand wildcards
            description: "Whether to expand wildcard expression to concrete indices that are open, closed or both. Default: open"
            required: false
            initialType: string
            schema:
              type: string
              enum:
                - open
                - closed
                - hidden
                - none
                - all
          masterTimeout:
            name: Master timeout
            description: Specify timeout for connection to master
            required: false
            initialType: number
            schema:
              type: number
        returns:
          name: Next
          description: The mapping loaded from Elasticsearch.
          context: $.indexMapping
          schema:
            type: object
        throws:
          name: Error
          description: An unexpected error was encountered.
          context: $.error
          schema:
            type: object
            properties:
              message:
                type: string

      putMapping: 
        name: Put Index Mapping
        description: Updates an index mapping
        parameters:
          index:
            name: Index-Name
            description: A comma-separated list of index names the mapping should be added to (supports wildcards); use _all or omit to add the mapping on all indices.
            required: true
            initialType: string
            schema:
              type: string
          body:
            name: Mapping
            description: The mapping definition.
            required: true
            initialType: object
            schema:
              type: object
          includeTypeName:
            name: Include type name
            description: "Whether to add the type name to the response (default: false)."
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          ignoreUnavailable:
            name: Include Unavailable
            description: Whether specified concrete indices should be ignored when unavailable (missing or closed).
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          allowNoIndices:
            name: Allow no indices
            description: Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes _all string or when no indices have been specified)
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          expandWildcards:
            name: Expand wildcards
            description: "Whether to expand wildcard expression to concrete indices that are open, closed or both. Default: open"
            required: false
            initialType: string
            schema:
              type: string
              enum:
                - open
                - closed
                - hidden
                - none
                - all
          masterTimeout:
            name: Master timeout
            description: Specify timeout for connection to master
            required: false
            initialType: number
            schema:
              type: number
        returns:
          name: Next
          description: The mapping loaded from Elasticsearch.
          context: $.indexMapping
          schema:
            type: object
        throws:
          name: Error
          description: An unexpected error was encountered.
          context: $.error
          schema:
            type: object
            properties:
              message:
                type: string

      getILMPolicy: 
        name: Get ILM policy
        description: Gets an ILM lifecycle policy. See ILM policy definition for definitions of policy components.
        parameters:
          policy:
            name: Policy-Name
            description: The name of the index lifecycle policy
            required: true
            initialType: string
            schema:
              type: string
        outputs:
          next:
            name: Next
            description: The created or updated ILM Lifecycle policy.
            context: $.ilmPolicy
            schema:
              type: object
          notFound:
            name: Not found
            description: Exit used if the ILM Lifecycle policy is not present in Elasticsearch.
            context: $.message
            schema:
              type: string
          error:
            name: Error
            description: An unexpected error happened
            context: $.error
            schema:
              type: object

      putILMPolicy: 
        name: Put ILM policy
        description: Creates or updates an ILM lifecycle policy. See ILM policy definition for definitions of policy components.
        parameters:
          policy:
            name: Policy-Name
            description: The name of the index lifecycle policy
            required: true
            initialType: string
            schema:
              type: string
          body:
            name: Policy-Body
            description: The lifecycle policy definition to register
            required: true
            initialType: object
            schema:
              type: object
          updateWhenChanged:
            name: Update when changed
            description: If set, the specified ILM policy and the ILM policy in Elasticsearch are compared and only updated if they are different. Note, that the ILM-Policy returned from Elasticsearch may contain default values. These defaults must be part of you desired ILM Policy. If the ILM policy does not exist in Elasticsearch, the ILM policy is created.
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          attachToIndexTemplate:
            name: Attach Policy to template
            description: "If specified, the created/updated ILM policy is assigned to one more index templates. Index template names specified as a comma-separated list, each may contain an rollover alias. E.g. template1:aliasName1, template2"
            required: false
            initialType: string
            schema:
              type: string
        outputs:
          next:
            name: Next
            description: The created or updated ILM Lifecycle policy.
            context: $.ilmPolicy
            schema:
              type: object
          noUpdate:
            name: No update
            description: ILM-Policy has not being updated. Message contains the reason.
            context: $.message
            schema:
              type: string
          error:
            name: Error
            description: An unexpected error happened
            context: $.error
            schema:
              type: object

      getRollupJobs: 
        name: Get Rollup job
        description: Retrieves the configuration, stats, and status of rollup jobs. Actually limited to ONE job only.
        parameters:
          id:
            name: Job-ID
            description: The ID of the job to fetch.
            required: true
            initialType: string
            schema:
              type: string
        outputs:
          next:
            name: Next
            description: Returns the Rollup job object.
            context: $.rollupJob
            schema:
              type: object
          notFound:
            name: Not found
            description: Exit used if the Rollup job is not present in Elasticsearch.
            context: $.message
            schema:
              type: string
          error:
            name: Error
            description: An unexpected error happened
            context: $.error
            schema:
              type: object

      putRollupJob: 
        name: Put Rollup job
        description: Creates or replaces a Rollup-Job. Technically, rollup jobs cannot be updated, only replaced. For this purpose, existing jobs are stopped/deleted and a new job with a new job ID (ID+Suffix) is created and started if requested.
        parameters:
          id:
            name: Job-ID
            description: Identifier for the rollup job. This can be any alphanumeric string and uniquely identifies the data that is associated with the rollup job. The ID is persistent; it is stored with the rolled up data. If you create a job, let it run for a while, then delete the job, the data that the job rolled up is still be associated with this job ID. You cannot create a new job with the same ID since that could lead to problems with mismatched job configurations.
            required: true
            initialType: string
            schema:
              type: string
          idSuffix:
            name: Job-ID Suffix
            description: Mandatory if an existing job is to be replaced. The Job-ID suffix is used to generate the final Job-ID, which is used to create the job.  This suffix is especially necessary if an existing job is to be replaced. Existing jobs with the primary job ID are searched for, stopped/deleted and a new job with job ID + suffix is created.
            required: false
            initialType: string
            schema:
              type: string
          body:
            name: Job configuration
            description: The rollup job configuration
            required: true
            initialType: object
            schema:
              type: object
          replaceWhenChanged:
            name: Recreate only when changed
            description: If set, a possibly existing roll-up job is only replaced if the configuration is different. For this purpose, the entire job configuration is compared. If no roll-up job exists, this parameter is ignored and a new job is created.
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          deletePreviousJob:
            name: Delete previous job
            description: If an existing job with the same primary job ID has been found which should be replaced, this switch decides whether the old job should be deleted. If the previous job is running, it will be stopped automatically.
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          startJob:
            name: Start job
            description: This toggle controls if the created rollup job should be started automatically after creation.
            required: false
            initialType: boolean
            schema:
              default: true
              type: boolean
        outputs:
          next:
            name: Next
            description: The created or updated Rollup job
            context: $.rollupJob
            schema:
              type: object
          noUpdate:
            name: No update
            description: Rollup-Job has not being updated. Message contains the reason.
            context: $.message
            schema:
              type: string
          error:
            name: Error
            description: An unexpected error happened
            context: $.error
            schema:
              type: object

      indicesCreate: 
        name: Create index
        description: Creates a new index.
        parameters:
          index:
            name: Index
            description: The name of the index
            required: true
            initialType: string
            schema:
              type: string
          alias:
            name: Alias name
            description: The alias for the index. If an index configuration is given, this alias name is merged into it. Please note, that the index- and alias-name must be different.
            required: false
            initialType: string
            schema:
              type: string
          indexTemplate:
            name: Index template name
            description: If given, the index will only be created if the index-template already exists.
            required: false
            initialType: string
            schema:
              type: string
          body:
            name: Index configuration
            description: The configuration for the index (settings and mappings)
            required: false
            initialType: object
            schema:
              type: object
        returns:
          name: Next
          description: Acknowledge message about the created index.
          context: $.result
          schema:
            type: object
        throws:
          name: Error
          description: An unexpected error was encountered.
          context: $.error
          schema:
            type: object
            properties:
              message:
                type: string

      indicesExists: 
        name: Index exists
        description: Checks if an index exists that optionally has an alias. Either parameter index, alias or both most be provided. An index alias is a secondary name used to refer to one or more existing indices. Most Elasticsearch APIs accept an index alias in place of an index name.
        parameters:
          index:
            name: Indices
            description: Comma-separated list or wildcard expression of index names used to limit the request.
            required: false
            initialType: string
            schema:
              type: string
          name:
            name: Alias
            description: Comma-separated list or wildcard expression of index alias names used to limit the request
            required: false
            initialType: string
            schema:
              type: string
        outputs:
          next:
            name: Next
            description: Indicates the specified index incl. aliases exist.
            context: $.result
            schema:
              type: object
          notFound:
            name: Not found
            description: Indicates one or more specified index aliases do not exist. 
            context: $.result
            schema:
              type: object
          error:
            name: Error
            description: An unexpected error happened
            context: $.error
            schema:
              type: object

      indicesRollover: 
        name: Rollover index
        description: The rollover index flow-node rolls a rollover target to a new index when the existing index meets a condition you provide. You can use this API to retire an index that becomes too large or too old.
        parameters:
          alias:
            name: Alias
            description: "Name of the existing index alias or data stream on which to the perform the rollover. Can be a string or an object. (e.g. { \"my-rollover-alias\": {} }). Only one alias is supported."
            required: true
            initialType: string
            schema:
              type: string
          newIndex:
            name: Target index
            description: Optional name of the target index to create and assign the index alias.
            required: false
            initialType: string
            schema:
              type: string
          body:
            name: Optional rollover conditions
            description: The conditions that needs to be met for executing rollover.
            required: false
            initialType: object
            schema:
              type: object
          dryRun:
            name: Dry-Run
            description: If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          wildcardAlias:
            name: Wildcard alias
            description: Given alias is considered as a prefix. All indicies starting with the alias, will be rolled up.
            required: false
            group: Advanced
            initialType: boolean
            schema:
              default: false
              type: boolean
        returns:
          name: Next
          description: Acknowledge message about the rollover.
          context: $.result
          schema:
            type: array
        throws:
          name: Error
          description: An unexpected error was encountered.
          context: $.error
          schema:
            type: object
            properties:
              message:
                type: string

      putTransform: 
        name: Create transform
        description: Creates a transform which copies data from source indices, transforms it, and persists it into an entity-centric destination index. If you choose to use the pivot method for your transform, the entities are defined by the set of group_by fields in the pivot object. If you choose to use the latest method, the entities are defined by the unique_key field values in the latest object.
        parameters:
          transformId:
            name: Transform-ID
            description: The id of the new transform.
            required: true
            schema:
              type: string
          idSuffix:
            name: Transform-ID Suffix
            description: Mandatory if an existing transform is to be replaced. The Transform-ID suffix is used to generate the final Transform-ID, which is used to create the transform. Existing transforms with the primary transforms ID are searched for, stopped/deleted and a new transform with transform ID + suffix is created.
            required: false
            schema:
              type: string
          body:
            name: Transform configuration
            description: The transform job configuration
            required: true
            schema:
              type: object
          limitOnLastCheckpoint:
            name: Limit to last checkpoint
            description: If an existing transform is updated or replaced, then this starts without a check point. So it would start again from zero and index all data again, which would lead to duplications. This switch controls that an updated transform is automatically constrained to the last timestamp of the existing transform.
            required: false
            initialType: boolean
            schema:
              default: true
              type: boolean
          deletePreviousTransform:
            name: Delete previous transform
            description: If an existing transform with the same primary ID has been found which should be replaced, this switch decides whether the old transform should be deleted. If the previous transform is running, it will be stopped automatically.
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
          startTransform:
            name: Start transform
            description: This toggle controls if the created transform job should be started automatically after creation.
            required: false
            initialType: boolean
            schema:
              default: true
              type: boolean
          deferValidation:
            name: Defer validation
            description: When true, deferrable validations are not run. This behavior may be desired if the source index does not exist until after the transform is created.
            required: false
            initialType: boolean
            schema:
              default: false
              type: boolean
        outputs:
          next:
            name: Next
            description: The created or updated transform
            context: $.transform
            schema:
              type: object
          noUpdate:
            name: No update
            description: Transform has not being updated. Message contains the reason.
            context: $.message
            schema:
              type: string
          error:
            name: Error
            description: An unexpected error happened
            context: $.error
            schema:
              type: object